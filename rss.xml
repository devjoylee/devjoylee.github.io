<?xml version="1.0" encoding="UTF-8"?><rss xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title><![CDATA[RSS Feed of joy.blog]]></title><description><![CDATA[FRONTEND DEVELOPER]]></description><link>https://devjoylee.github.io</link><generator>GatsbyJS</generator><lastBuildDate>Sat, 19 Feb 2022 05:51:20 GMT</lastBuildDate><item><title><![CDATA[[Node] npm / npx / yarn]]></title><description><![CDATA[✔ npm npm : Node Package Manager(Modules) npm은 NodeJS를 설치하면 함께 설치되는 패키지 관리도구입니다. 이 패키지는 모듈이라고도 불리며 npm을 통해 서비스 개발에 필요한 webpack, CRA, react…]]></description><link>https://devjoylee.github.io/npm-npx/</link><guid isPermaLink="false">https://devjoylee.github.io/npm-npx/</guid><pubDate>Wed, 17 Nov 2021 00:00:00 GMT</pubDate><content:encoded>&lt;h2&gt;✔ npm&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;npm : Node Package Manager(Modules)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;npm은 NodeJS를 설치하면 함께 설치되는 패키지 관리도구입니다. 이 패키지는 모듈이라고도 불리며 npm을 통해 서비스 개발에 필요한 webpack, CRA, react 등의 다양한 모듈 라이브러리를 설치할 수 있습니다.&lt;/p&gt;
&lt;p&gt;ex) &lt;code class=&quot;language-text&quot;&gt;npm install webpack&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code class=&quot;language-text&quot;&gt;npm init&lt;/code&gt; 명령어를 사용해 초기 &lt;code class=&quot;language-text&quot;&gt;package.json&lt;/code&gt; 파일을 만들고 프로젝트를 초기화합니다. npm을 통해 다운된 패키지는 &lt;code class=&quot;language-text&quot;&gt;package.json&lt;/code&gt;에 기록됩니다.
&lt;br /&gt;&lt;/p&gt;
&lt;h3&gt;npm의 단점&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;로컬 컴퓨터에 직접 설치되어 용량 차지가 크다&lt;/li&gt;
&lt;li&gt;다운받은 패키지의 새 버전이 나온 경우, 업데이트를 직접 해주어야한다.&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h2&gt;✔ npx&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;npx : Node Package Runner&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;npx는 npm 5.2.0 버전부터 새로 도입된 패키지 관리 도구입니다. npm 5.2.0 버전 이상을 다운받았다면 자동으로 설치되며 이는 npm을 좀더 편리하게 사용할 수 있도록 도와줍니다.&lt;/p&gt;
&lt;p&gt;ex) &lt;code class=&quot;language-text&quot;&gt;npx install webpack&lt;/code&gt;
&lt;br /&gt;&lt;/p&gt;
&lt;h3&gt;npx의 장점&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;패키지를 컴퓨터에 직접 저장하지 않고 일회성으로 패키지를 사용해 용량차지를 하지 않는다.&lt;/li&gt;
&lt;li&gt;매번 최신 업데이트된 패키지를 사용할 수 있다.
&lt;br /&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;npx 동작방법&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;기본적으로, 실행할 패키지가 실행 가능한 경로에 있는지 확인한다. (예를 들면, 프로젝트내에서 다운된 패키지가 있는지 확인)&lt;/li&gt;
&lt;li&gt;만약에 있다면, 그것을 실행한다.&lt;/li&gt;
&lt;li&gt;아니라면 패키지가 설치가 되지 않았다는 것으로 판단하여, npx가 가장 최신 버전의 패키지를 설치하고 실행한다.&lt;/li&gt;
&lt;/ol&gt;
&lt;hr&gt;
&lt;h2&gt;✔ yarn&lt;/h2&gt;
&lt;p&gt;yarn은 npm과 같은 패키지 매니저입니다. 차이점이 있다면 Node.js 설치시에 함께 설치되지 않고 별도의 명령어를 사용해 설치합니다. yarn을 사용하면 &lt;code class=&quot;language-text&quot;&gt;yarn.lock&lt;/code&gt; 이라는 파일에 다운한 패키지가 기록되며 이 파일은 모든 디바이스에 같은 패키지를 설치하는 것을 보장합니다.&lt;/p&gt;
&lt;p&gt;yarn 설치 : &lt;code class=&quot;language-text&quot;&gt;npm install -g yarn&lt;/code&gt;&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;bash&quot;&gt;&lt;pre class=&quot;language-bash&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;&lt;span class=&quot;token comment&quot;&gt;# npm 사용법&lt;/span&gt;
&lt;span class=&quot;token function&quot;&gt;npm&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;install&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;&amp;lt;&lt;/span&gt;package&lt;span class=&quot;token operator&quot;&gt;&gt;&lt;/span&gt;
&lt;span class=&quot;token function&quot;&gt;npm&lt;/span&gt; uninstall &lt;span class=&quot;token operator&quot;&gt;&amp;lt;&lt;/span&gt;package&lt;span class=&quot;token operator&quot;&gt;&gt;&lt;/span&gt;

&lt;span class=&quot;token comment&quot;&gt;# yarn 사용법&lt;/span&gt;
&lt;span class=&quot;token function&quot;&gt;yarn&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;add&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;&amp;lt;&lt;/span&gt;package&lt;span class=&quot;token operator&quot;&gt;&gt;&lt;/span&gt;
&lt;span class=&quot;token function&quot;&gt;yarn&lt;/span&gt; remove &lt;span class=&quot;token operator&quot;&gt;&amp;lt;&lt;/span&gt;package&lt;span class=&quot;token operator&quot;&gt;&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;yarn의 장점&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;속도나 안전성은 npm과 비슷하나 npm보다 보안이 뛰어나고 의존성 관리를 강조한다.&lt;/li&gt;
&lt;li&gt;버전을 어디에서나 같게 만들어 버전 충돌에 의한 버그가 적다.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;yarn의 단점&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;npm에 비해 레퍼런스가 적고 덜 보편적이다.&lt;/li&gt;
&lt;/ul&gt;</content:encoded></item></channel></rss>