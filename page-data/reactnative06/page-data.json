{"componentChunkName":"component---src-templates-post-jsx","path":"/reactnative06/","result":{"data":{"site":{"siteMetadata":{"title":"joy.blog"}},"markdownRemark":{"id":"cf6a0fe7-dcb9-58a7-8115-6a3e8d660f67","excerpt":"React Native Theme React Native 앱에서 다크 모드와 라이트 모드를 지원하는 것은 사용자 경험을 향상시키는 중요한 요소이다. Dark & Light 테마를 설정하는 방법과 Theme Hook을 사용하는 방법을 알아보자! 테마 변경 단축키 Shift + Command + A (맥 기준) Theme 설정 방법 useColorScheme…","html":"<h2>React Native Theme</h2>\n<p>React Native 앱에서 다크 모드와 라이트 모드를 지원하는 것은 사용자 경험을 향상시키는 중요한 요소이다. Dark &#x26; Light 테마를 설정하는 방법과 Theme Hook을 사용하는 방법을 알아보자!</p>\n<h3>테마 변경 단축키</h3>\n<p>Shift + Command + A (맥 기준)</p>\n<h2>Theme 설정 방법</h2>\n<h3>useColorScheme로 직접 테마 설정</h3>\n<p><strong>1. 컬러 팔레트 정의</strong></p>\n<p>먼저 사용할 색상을 정의한다. (Color Picker : <a href=\"https://flatuicolors.com/\">Flat UI Colors 2 - 14 Color Palettes, 280 colors 🎨</a>)</p>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token keyword\">export</span> <span class=\"token keyword\">const</span> <span class=\"token constant\">YELLOW_COLOR</span> <span class=\"token operator\">=</span> <span class=\"token string\">\"#ffa801\"</span>\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">const</span> <span class=\"token constant\">BLACK_COLOR</span> <span class=\"token operator\">=</span> <span class=\"token string\">\"#1e272e\"</span>\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">const</span> <span class=\"token constant\">DARK_GREY</span> <span class=\"token operator\">=</span> <span class=\"token string\">\"#d2dae2\"</span>\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">const</span> <span class=\"token constant\">LIGHT_GREY</span> <span class=\"token operator\">=</span> <span class=\"token string\">\"#808e9b\"</span></code></pre></div>\n<br/>\n<p><strong>2.useColorScheme 훅 사용하기</strong></p>\n<p>useColorScheme 훅을 사용하면 현재 시스템 테마가 다크 모드인지 라이트 모드인지를 알려준다. 이를 활용해 네비게이션 바와 탭 바의 스타일을 동적으로 변경할 수 있다.</p>\n<p><a href=\"https://reactnative.dev/docs/usecolorscheme\">useColorScheme Docs</a></p>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> useColorScheme <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"react-native\"</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> createBottomTabNavigator <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"@react-navigation/bottom-tabs\"</span>\n\n<span class=\"token keyword\">const</span> Tab <span class=\"token operator\">=</span> <span class=\"token function\">createBottomTabNavigator</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">const</span> <span class=\"token function-variable function\">Tabs</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> isDark <span class=\"token operator\">=</span> <span class=\"token function\">useColorScheme</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">===</span> <span class=\"token string\">\"dark\"</span>\n\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Tab.Navigator</span></span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Tab.Screen</span></span> <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>Search<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">component</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>Search<span class=\"token punctuation\">}</span></span> <span class=\"token punctuation\">/></span></span><span class=\"token plain-text\">\n    </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span><span class=\"token class-name\">Tab.Navigator</span></span><span class=\"token punctuation\">></span></span>\n  <span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> Tabs</code></pre></div>\n<h3>Theme Hook 사용하기</h3>\n<p>useColorScheme 훅을 사용하면 테마별로 색상을 개별적으로 지정해야 한다. 하지만 Theme Hook을 사용하면 미리 정의된 테마를 간편하게 적용할 수 있다. 아래 예시에서는 NavigationContainer 컴포넌트에 다크 모드일 때는 DarkTheme, 라이트 모드일 때는 DefaultTheme를 적용했다.</p>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token keyword\">import</span> React <span class=\"token keyword\">from</span> <span class=\"token string\">\"react\"</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span>\n  NavigationContainer<span class=\"token punctuation\">,</span>\n  DarkTheme<span class=\"token punctuation\">,</span>\n  DefaultTheme<span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"@react-navigation/native\"</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> useColorScheme <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"react-native\"</span>\n<span class=\"token keyword\">import</span> Tabs <span class=\"token keyword\">from</span> <span class=\"token string\">\"./navigation/Tabs\"</span>\n\n<span class=\"token keyword\">const</span> <span class=\"token function-variable function\">App</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> isDark <span class=\"token operator\">=</span> <span class=\"token function\">useColorScheme</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">===</span> <span class=\"token string\">\"dark\"</span>\n\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">NavigationContainer</span></span> <span class=\"token attr-name\">theme</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>isDark <span class=\"token operator\">?</span> DarkTheme <span class=\"token operator\">:</span> DefaultTheme<span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Tabs</span></span> <span class=\"token punctuation\">/></span></span><span class=\"token plain-text\">\n    </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span><span class=\"token class-name\">NavigationContainer</span></span><span class=\"token punctuation\">></span></span>\n  <span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> App</code></pre></div>\n<br/>\n<br/>\n<blockquote>\n<p>REFERENCE <br/>\nReact Navigation Docs <a href=\"https://reactnavigation.org/docs/stack-navigator/\">https://reactnavigation.org/docs/stack-navigator/</a> <br/> Nomad Coder <a href=\"https://nomadcoders.co/react-native-for-beginners/lobby\">https://nomadcoders.co/react-native-for-beginners/lobby</a></p>\n</blockquote>","frontmatter":{"title":"[React Native] Dark & Light 테마 적용하기","date":"March 10, 2023","update":"March 10, 2023","tags":["react-native"],"series":"React Native"},"fields":{"slug":"/reactnative06/","readingTime":{"minutes":2.155}}},"seriesList":{"edges":[{"node":{"id":"c356fa49-a838-57c4-ac97-cf162aa0015e","fields":{"slug":"/reactnative01/"},"frontmatter":{"title":"[React Native] 설치 및 세팅하기"}}},{"node":{"id":"b9d90ae8-e0ed-5137-8fd8-2d4b73e20dd0","fields":{"slug":"/reactnative02/"},"frontmatter":{"title":"[React Native] 꼭 알아야할 주요 특징"}}},{"node":{"id":"76c644be-9f1a-5c37-b8de-4bbb0aee848a","fields":{"slug":"/reactnative03/"},"frontmatter":{"title":"[React Native] AppLoading 컴포넌트"}}},{"node":{"id":"92b2e85c-ecd0-5e36-a48b-8fb0f46723bb","fields":{"slug":"/reactnative04/"},"frontmatter":{"title":"[React Native] Tab Navigator"}}},{"node":{"id":"034c5910-5f6b-5875-86c9-28f9e08b4e24","fields":{"slug":"/reactnative05/"},"frontmatter":{"title":"[React Native] Stack Navigator"}}},{"node":{"id":"cf6a0fe7-dcb9-58a7-8115-6a3e8d660f67","fields":{"slug":"/reactnative06/"},"frontmatter":{"title":"[React Native] Dark & Light 테마 적용하기"}}},{"node":{"id":"9848af5c-2ceb-56e3-8ce3-5a5fddd32f5d","fields":{"slug":"/reactnative07/"},"frontmatter":{"title":"[React Native] React Native로 날씨앱 만들기 with Expo"}}}]},"previous":{"fields":{"slug":"/reactnative05/"},"frontmatter":{"title":"[React Native] Stack Navigator"}},"next":{"fields":{"slug":"/reactnative07/"},"frontmatter":{"title":"[React Native] React Native로 날씨앱 만들기 with Expo"}}},"pageContext":{"id":"cf6a0fe7-dcb9-58a7-8115-6a3e8d660f67","series":"React Native","previousPostId":"034c5910-5f6b-5875-86c9-28f9e08b4e24","nextPostId":"9848af5c-2ceb-56e3-8ce3-5a5fddd32f5d"}},"staticQueryHashes":[],"slicesMap":{}}