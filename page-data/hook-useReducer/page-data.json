{"componentChunkName":"component---src-templates-post-jsx","path":"/hook-useReducer/","result":{"data":{"site":{"siteMetadata":{"title":"joy.blog"}},"markdownRemark":{"id":"d7f27a35-173b-529a-bef4-f6d9f3505d63","excerpt":"✨ useReducer 정의 useState처럼 state를 생성 및 관리하는 hook입니다. 여러개의 하위값을 가진 복잡한 state를 다뤄야하거나 배열값에 추가,삭제,수정 등의 동시작업이 필요한 경우 사용합니다.  : state 업데이트를 위한 요구  : 요구의 내용  : state를 업데이트하는 역할 (은행) reducer 🔎 useReducer 사…","html":"<h2>✨ useReducer 정의</h2>\n<p>useState처럼 state를 생성 및 관리하는 hook입니다. 여러개의 하위값을 가진 복잡한 state를 다뤄야하거나 배열값에 추가,삭제,수정 등의 동시작업이 필요한 경우 사용합니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token keyword\">const</span> <span class=\"token punctuation\">[</span>state<span class=\"token punctuation\">,</span> dispatch<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token function\">useReducer</span><span class=\"token punctuation\">(</span>reducer<span class=\"token punctuation\">,</span> initialState<span class=\"token punctuation\">)</span></code></pre></div>\n<ul>\n<li><code class=\"language-text\">dispatch</code> : state 업데이트를 위한 요구</li>\n<li><code class=\"language-text\">action</code> : 요구의 내용</li>\n<li><code class=\"language-text\">reducer</code> : state를 업데이트하는 역할 (은행)</li>\n</ul>\n<p><img src=\"https://user-images.githubusercontent.com/68415905/156757818-b586bdeb-e253-4466-80eb-0b9af175d2e9.JPG\" alt=\"reducer\"></p>\n<h2>🔎 useReducer 사용하기</h2>\n<h3>1. 필요한 action 정하기</h3>\n<p>reducer에서 사용할 action은 상수화시켜 관리하면 유지보수가 편리합니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token keyword\">const</span> <span class=\"token constant\">ACTION_TYPES</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token constant\">DEPOSIT</span><span class=\"token operator\">:</span> <span class=\"token string\">\"deposit\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token constant\">WITHDRAW</span><span class=\"token operator\">:</span> <span class=\"token string\">\"withdraw\"</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h3>2. reducer 함수 작성</h3>\n<p>reducer함수에는 <code class=\"language-text\">switch</code>~<code class=\"language-text\">case</code>문을 사용하여 action에 따라 state를 업데이트 시켜주는 코드를 작성합니다. <code class=\"language-text\">payload</code>란 배나 비행기에 실려온 '화물'을 뜻하는데 여기서는 action이 실행되었을 때 전달되는 값을 의미합니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token comment\">// 기존 state에 전달된 payload 값을 더하거나 빼서 state 업데이트</span>\n<span class=\"token keyword\">const</span> <span class=\"token function-variable function\">reducer</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">state<span class=\"token punctuation\">,</span> action</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">switch</span> <span class=\"token punctuation\">(</span>action<span class=\"token punctuation\">.</span>type<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">case</span> <span class=\"token constant\">ACTION_TYPES</span><span class=\"token punctuation\">.</span><span class=\"token constant\">DEPOSIT</span><span class=\"token operator\">:</span>\n      <span class=\"token keyword\">return</span> state <span class=\"token operator\">+</span> action<span class=\"token punctuation\">.</span>payload\n    <span class=\"token keyword\">case</span> <span class=\"token constant\">ACTION_TYPES</span><span class=\"token punctuation\">.</span><span class=\"token constant\">WITHDRAW</span><span class=\"token operator\">:</span>\n      <span class=\"token keyword\">return</span> state <span class=\"token operator\">-</span> action<span class=\"token punctuation\">.</span>payload\n    <span class=\"token keyword\">default</span><span class=\"token operator\">:</span>\n      <span class=\"token keyword\">return</span> state\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h3>3. useReducer 호출</h3>\n<p>useReducer의 인자로 reducer 함수와 초기값(initialState)을 넘겨주면 state와 dispatch를 반환합니다. (<code class=\"language-text\">state</code>: 현재 상태 / <code class=\"language-text\">dispatch</code>: state 업데이트에 필요한 요구)</p>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token keyword\">const</span> <span class=\"token punctuation\">[</span>state<span class=\"token punctuation\">,</span> dispatch<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token function\">useReducer</span><span class=\"token punctuation\">(</span>reducer<span class=\"token punctuation\">,</span> initialState<span class=\"token punctuation\">)</span></code></pre></div>\n<h3>4. dispatch로 action 실행</h3>\n<p><code class=\"language-text\">dispatch</code>를 사용해서 필요한 값을 전달하고 action을 실행합니다. ex) '입금' 버튼을 클릭했을 때, 'DEPOSIT' action 실행. '출금' 버튼을 클릭했을 때, 'WITHDRAW' action 실행</p>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token keyword\">const</span> <span class=\"token punctuation\">[</span>value<span class=\"token punctuation\">,</span> setValue<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token function\">useState</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">const</span> <span class=\"token punctuation\">[</span>money<span class=\"token punctuation\">,</span> dispatch<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token function\">useReducer</span><span class=\"token punctuation\">(</span>reducer<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">const</span> <span class=\"token function-variable function\">handleDeposit</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span>\n  <span class=\"token function\">dispatch</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">type</span><span class=\"token operator\">:</span> <span class=\"token constant\">ACTION_TYPES</span><span class=\"token punctuation\">.</span><span class=\"token constant\">DEPOSIT</span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">payload</span><span class=\"token operator\">:</span> number <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">const</span> <span class=\"token function-variable function\">handleWithdraw</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span>\n  <span class=\"token function\">dispatch</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">type</span><span class=\"token operator\">:</span> <span class=\"token constant\">ACTION_TYPES</span><span class=\"token punctuation\">.</span><span class=\"token constant\">WITHDRAW</span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">payload</span><span class=\"token operator\">:</span> number <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n    </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>h2</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">Reducer 은행</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>h2</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n    </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>p</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">잔고 : </span><span class=\"token punctuation\">{</span>money<span class=\"token punctuation\">}</span><span class=\"token plain-text\">원</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>p</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n    </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>input</span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>number<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">value</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>value<span class=\"token punctuation\">}</span></span> <span class=\"token attr-name\">step</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>1000<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span><span class=\"token plain-text\">\n    </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>button</span> <span class=\"token attr-name\">onclick</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>handleDeposit<span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">입금</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>button</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n    </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>button</span> <span class=\"token attr-name\">onclick</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>handleWithdraw<span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">출금</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>button</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n  </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span>\n<span class=\"token punctuation\">)</span></code></pre></div>\n<h2>🧐 useReducer 예시</h2>\n<h3>reducer 함수</h3>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token keyword\">function</span> <span class=\"token function\">reducer</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">state<span class=\"token punctuation\">,</span> action</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">switch</span> <span class=\"token punctuation\">(</span>action<span class=\"token punctuation\">.</span>type<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">case</span> <span class=\"token string\">\"CHANGE_INPUT\"</span><span class=\"token operator\">:</span>\n      <span class=\"token keyword\">return</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token operator\">...</span>state<span class=\"token punctuation\">,</span>\n        <span class=\"token literal-property property\">inputs</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n          <span class=\"token operator\">...</span>state<span class=\"token punctuation\">.</span>inputs<span class=\"token punctuation\">,</span>\n          <span class=\"token punctuation\">[</span>action<span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">]</span><span class=\"token operator\">:</span> action<span class=\"token punctuation\">.</span>value<span class=\"token punctuation\">,</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n      <span class=\"token punctuation\">}</span>\n    <span class=\"token keyword\">case</span> <span class=\"token string\">\"CREATE_USER\"</span><span class=\"token operator\">:</span>\n      <span class=\"token keyword\">return</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token literal-property property\">inputs</span><span class=\"token operator\">:</span> initialState<span class=\"token punctuation\">.</span>inputs<span class=\"token punctuation\">,</span>\n        <span class=\"token literal-property property\">users</span><span class=\"token operator\">:</span> state<span class=\"token punctuation\">.</span>users<span class=\"token punctuation\">.</span><span class=\"token function\">concat</span><span class=\"token punctuation\">(</span>action<span class=\"token punctuation\">.</span>user<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n      <span class=\"token punctuation\">}</span>\n    <span class=\"token keyword\">case</span> <span class=\"token string\">\"TOGGLE_USER\"</span><span class=\"token operator\">:</span>\n      <span class=\"token keyword\">return</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token operator\">...</span>state<span class=\"token punctuation\">,</span>\n        <span class=\"token literal-property property\">users</span><span class=\"token operator\">:</span> state<span class=\"token punctuation\">.</span>users<span class=\"token punctuation\">.</span><span class=\"token function\">map</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">user</span> <span class=\"token operator\">=></span>\n          user<span class=\"token punctuation\">.</span>id <span class=\"token operator\">===</span> action<span class=\"token punctuation\">.</span>id <span class=\"token operator\">?</span> <span class=\"token punctuation\">{</span> <span class=\"token operator\">...</span>user<span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">active</span><span class=\"token operator\">:</span> <span class=\"token operator\">!</span>user<span class=\"token punctuation\">.</span>active <span class=\"token punctuation\">}</span> <span class=\"token operator\">:</span> user\n        <span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n      <span class=\"token punctuation\">}</span>\n    <span class=\"token keyword\">case</span> <span class=\"token string\">\"REMOVE_USER\"</span><span class=\"token operator\">:</span>\n      <span class=\"token keyword\">return</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token operator\">...</span>state<span class=\"token punctuation\">,</span>\n        <span class=\"token literal-property property\">users</span><span class=\"token operator\">:</span> state<span class=\"token punctuation\">.</span>users<span class=\"token punctuation\">.</span><span class=\"token function\">filter</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">user</span> <span class=\"token operator\">=></span> user<span class=\"token punctuation\">.</span>id <span class=\"token operator\">!==</span> action<span class=\"token punctuation\">.</span>id<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n      <span class=\"token punctuation\">}</span>\n    <span class=\"token keyword\">default</span><span class=\"token operator\">:</span>\n      <span class=\"token keyword\">return</span> state\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h3>dispatch 함수</h3>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token keyword\">const</span> <span class=\"token punctuation\">[</span>state<span class=\"token punctuation\">,</span> dispatch<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token function\">useReducer</span><span class=\"token punctuation\">(</span>reducer<span class=\"token punctuation\">,</span> initialState<span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">const</span> nextId <span class=\"token operator\">=</span> <span class=\"token function\">useRef</span><span class=\"token punctuation\">(</span><span class=\"token number\">4</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span> users <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> state\n<span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span> username<span class=\"token punctuation\">,</span> email <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> state<span class=\"token punctuation\">.</span>inputs\n\n<span class=\"token keyword\">const</span> onChange <span class=\"token operator\">=</span> <span class=\"token function\">useCallback</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">e</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span> name<span class=\"token punctuation\">,</span> value <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> e<span class=\"token punctuation\">.</span>target\n  <span class=\"token function\">dispatch</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n    <span class=\"token literal-property property\">type</span><span class=\"token operator\">:</span> <span class=\"token string\">\"CHANGE_INPUT\"</span><span class=\"token punctuation\">,</span>\n    name<span class=\"token punctuation\">,</span>\n    value<span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">const</span> onCreate <span class=\"token operator\">=</span> <span class=\"token function\">useCallback</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">dispatch</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n    <span class=\"token literal-property property\">type</span><span class=\"token operator\">:</span> <span class=\"token string\">\"CREATE_USER\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token literal-property property\">user</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token literal-property property\">id</span><span class=\"token operator\">:</span> nextId<span class=\"token punctuation\">.</span>current<span class=\"token punctuation\">,</span>\n      username<span class=\"token punctuation\">,</span>\n      email<span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n  nextId<span class=\"token punctuation\">.</span>current <span class=\"token operator\">+=</span> <span class=\"token number\">1</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span>username<span class=\"token punctuation\">,</span> email<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">const</span> onToggle <span class=\"token operator\">=</span> <span class=\"token function\">useCallback</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">id</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">dispatch</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n    <span class=\"token literal-property property\">type</span><span class=\"token operator\">:</span> <span class=\"token string\">\"TOGGLE_USER\"</span><span class=\"token punctuation\">,</span>\n    id<span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">const</span> onRemove <span class=\"token operator\">=</span> <span class=\"token function\">useCallback</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">id</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">dispatch</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n    <span class=\"token literal-property property\">type</span><span class=\"token operator\">:</span> <span class=\"token string\">\"REMOVE_USER\"</span><span class=\"token punctuation\">,</span>\n    id<span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></code></pre></div>\n<br/>\n<blockquote>\n<p>REFERENCE<br /> Youtube 별코딩 <a href=\"https://youtu.be/tdORpiegLg0\">https://youtu.be/tdORpiegLg0</a><br/>벨로퍼트 리액트 <a href=\"https://react.vlpt.us/basic/20-useReducer.html\">https://react.vlpt.us/basic/20-useReducer.html</a></p>\n</blockquote>","frontmatter":{"title":"[React] React Hook - useReducer","date":"January 25, 2022","update":"January 25, 2022","tags":["frontend","react"],"series":"React.js"},"fields":{"slug":"/hook-useReducer/","readingTime":{"minutes":3.355}}},"seriesList":{"edges":[{"node":{"id":"b4d0435e-daf0-5a20-814d-e6eb0a6637d0","fields":{"slug":"/about-react/"},"frontmatter":{"title":"[React] 리액트의 개념과 특징"}}},{"node":{"id":"9eb4fd90-0091-59ae-af4a-2157f1d48e9a","fields":{"slug":"/react-scratch/"},"frontmatter":{"title":"[React] 리액트 시작하기 (without CRA)"}}},{"node":{"id":"a2c215be-4572-531c-af95-c85a84c12601","fields":{"slug":"/about-react-hook/"},"frontmatter":{"title":"[React] React Hook이란?"}}},{"node":{"id":"da1bdaf1-0908-5a09-96fe-84b01ec1a4c9","fields":{"slug":"/hook-useState/"},"frontmatter":{"title":"[React] React Hook - useState"}}},{"node":{"id":"74a83270-4b1c-509e-99d5-3bdb5a24f619","fields":{"slug":"/hook-useEffect/"},"frontmatter":{"title":"[React] React Hook - useEffect"}}},{"node":{"id":"97466c71-229f-5eef-b94f-3b2c3a1e58b8","fields":{"slug":"/hook-useRef/"},"frontmatter":{"title":"[React] React Hook - useRef"}}},{"node":{"id":"5c86f011-9568-5f1a-80cb-399a2cd6e93c","fields":{"slug":"/hook-useContext/"},"frontmatter":{"title":"[React] React Hook - useContext"}}},{"node":{"id":"25c35473-fd2a-5a2e-b427-00b3b9282235","fields":{"slug":"/hook-useMemo/"},"frontmatter":{"title":"[React] React Hook - useMemo"}}},{"node":{"id":"b987645f-66e7-5659-9c5b-6ef6d8f77751","fields":{"slug":"/hook-useCallback/"},"frontmatter":{"title":"[React] React Hook - useCallback"}}},{"node":{"id":"d7f27a35-173b-529a-bef4-f6d9f3505d63","fields":{"slug":"/hook-useReducer/"},"frontmatter":{"title":"[React] React Hook - useReducer"}}}]},"previous":{"fields":{"slug":"/hook-useCallback/"},"frontmatter":{"title":"[React] React Hook - useCallback"}},"next":{"fields":{"slug":"/currency-converter/"},"frontmatter":{"title":"환율 계산기(Currency Converter) 만들기"}}},"pageContext":{"id":"d7f27a35-173b-529a-bef4-f6d9f3505d63","series":"React.js","previousPostId":"b987645f-66e7-5659-9c5b-6ef6d8f77751","nextPostId":"e3c75b5c-25f3-5746-996b-47ff2c881adc"}},"staticQueryHashes":[],"slicesMap":{}}