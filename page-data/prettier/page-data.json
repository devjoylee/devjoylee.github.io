{"componentChunkName":"component---src-templates-post-jsx","path":"/prettier/","result":{"data":{"site":{"siteMetadata":{"title":"joy.blog"}},"markdownRemark":{"id":"76430891-9c35-5424-8f64-5ce947d3c32e","excerpt":"prettier Prettier는 코드를 정해진 스타일로 교정해주는 도구이다. 주로 ESLint와 함께 사용되며 ESLint를 통해 에러를 최소화하여 코드 품질을 높이고 prettier를 통해 코드 스타일을 자동 포맷팅하여 코드의 가독성과 일관성을 높인다. prettier 설치 prettier config 추가  파일을 생성하고 다음과 같은 규칙을 추가한…","html":"<h2>prettier</h2>\n<p>Prettier는 코드를 정해진 스타일로 교정해주는 도구이다. 주로 ESLint와 함께 사용되며 ESLint를 통해 에러를 최소화하여 코드 품질을 높이고 prettier를 통해 코드 스타일을 자동 포맷팅하여 코드의 가독성과 일관성을 높인다.</p>\n<h3>prettier 설치</h3>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token function\">npm</span> i prettier --save-dev</code></pre></div>\n<h3>prettier config 추가</h3>\n<p><code class=\"language-text\">.prettierrc</code> 파일을 생성하고 다음과 같은 규칙을 추가한다. (관련 문서 : <a href=\"https://prettier.io/docs/en/options.html\">https://prettier.io/docs/en/options.html</a>)</p>\n<div class=\"gatsby-highlight\" data-language=\"json\"><pre class=\"language-json\"><code class=\"language-json\"><span class=\"token punctuation\">{</span>\n  <span class=\"token property\">\"singleQuote\"</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n  <span class=\"token property\">\"semi\"</span><span class=\"token operator\">:</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">,</span>\n  <span class=\"token property\">\"tabWidth\"</span><span class=\"token operator\">:</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span>\n  <span class=\"token property\">\"printWidth\"</span><span class=\"token operator\">:</span> <span class=\"token number\">80</span><span class=\"token punctuation\">,</span>\n  <span class=\"token property\">\"endOfLine\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"auto\"</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h3>ESLint와 Prettier의 차이점</h3>\n<ul>\n<li><strong>ESLint</strong>: 주로 코드 품질을 개선하고 오류를 방지하기 위해 사용된다. 문법 오류, 잠재적 버그, 스타일 등을 검사하여 알려준다.</li>\n<li><strong>Prettier</strong>: 코드 스타일과 관련된 들여쓰기, 공백, 따옴표 사용 등을 규칙에 맞게 자동으로 수정해준다.</li>\n</ul>\n<h3>ESLint 충돌 방지 설정하기</h3>\n<p>ESLint와 prettier의 설정 중에는 스타일과 관련된 비슷한 규칙이 있어서 종종 두가지 규칙이 충돌하는 일이 생긴다.<br/> 이를 방지하기 위해 아래와 같은 플러그인을 추가해서 충돌을 막아준다.</p>\n<ol>\n<li><code class=\"language-text\">eslint-config-prettier</code>: prettier를 ESLint plugin에 추가. prettier가 인식한 에러를 ESLint 에러로 출력시켜준다.</li>\n<li><code class=\"language-text\">eslint-plugin-prettier</code>: ESLint rule 중에서 prettier와 충돌하는 부분을 비활성화할 수 있다.</li>\n</ol>\n<br/>\n<ul>\n<li>플러그인 설치하기</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token function\">npm</span> i <span class=\"token parameter variable\">-D</span> eslint-config-prettier eslint-plugin-prettier @types/eslint-config-prettier</code></pre></div>\n<ul>\n<li><code class=\"language-text\">eslint.config.js</code>에 prettier 설정 추가하기 (주의! prettier 규칙은 eslint 규칙 마지막부분에 작성한다)</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">import</span> prettierConfig <span class=\"token keyword\">from</span> <span class=\"token string\">\"eslint-config-prettier\"</span>\n<span class=\"token keyword\">import</span> pluginPrettier <span class=\"token keyword\">from</span> <span class=\"token string\">\"eslint-plugin-prettier\"</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token punctuation\">[</span>\n  <span class=\"token comment\">// ...</span>\n  <span class=\"token punctuation\">{</span>\n    <span class=\"token literal-property property\">plugins</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token literal-property property\">prettier</span><span class=\"token operator\">:</span> pluginPrettier<span class=\"token punctuation\">,</span> <span class=\"token comment\">// 'prettier' 플러그인 추가</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">{</span>\n    <span class=\"token literal-property property\">rules</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token comment\">// ...</span>\n      <span class=\"token comment\">// 가장 아래에 작성</span>\n      <span class=\"token operator\">...</span>prettierConfig<span class=\"token punctuation\">.</span>rules<span class=\"token punctuation\">,</span> <span class=\"token comment\">// prettier와 eslint 규칙 병합</span>\n      <span class=\"token string-property property\">\"prettier/prettier\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"error\"</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">// prettier 규칙에 어긋나면 eslint 에러발생</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">]</span></code></pre></div>\n<h3>VSCode formatter 설정</h3>\n<ol>\n<li>VSCode Extension에서 'Prettier - Code formatter' 플러그인 설치</li>\n<li>VSCode setting → Defalut Formatter 검색 → 'Prettier - Code formatter' 선택</li>\n</ol>\n<img width='800' alt='Screenshot 2024-06-21 at 6 03 03 PM' src='https://github.com/devjoylee/devjoylee.github.io/assets/68415905/b3bb3d93-d6eb-4f41-9aa0-15e522a24c7e'>\n<ol start=\"3\">\n<li>VSCode setting → <code class=\"language-text\">formatOnSave</code> 검색 후 체크 <br/>(formatOnSave 를 설정해두면 파일을 저장할 때마다 prettier 포맷이 실행되어 코드 가독성을 올려준다.)</li>\n</ol>\n<img width='800' alt='' src='https://github.com/devjoylee/devjoylee.github.io/assets/68415905/b9cf8e4b-5358-4973-9c21-6d2f6e9ba7ff'>","frontmatter":{"title":"협업을 위한 프로젝트 설정 - Prettier","date":"June 12, 2024","update":"June 12, 2024","tags":["frontend","development"],"series":"Dev Environment"},"fields":{"slug":"/prettier/","readingTime":{"minutes":2.815}}},"seriesList":{"edges":[{"node":{"id":"6a885fc6-db67-5e8e-87eb-b695ef8c1df6","fields":{"slug":"/eslint/"},"frontmatter":{"title":"협업을 위한 프로젝트 설정 - ESLint"}}},{"node":{"id":"76430891-9c35-5424-8f64-5ce947d3c32e","fields":{"slug":"/prettier/"},"frontmatter":{"title":"협업을 위한 프로젝트 설정 - Prettier"}}},{"node":{"id":"8f667285-8ab0-5043-b4ae-f4fc69bad25e","fields":{"slug":"/husky/"},"frontmatter":{"title":"협업을 위한 프로젝트 설정 - husky + lint-staged"}}},{"node":{"id":"ab4be412-009d-574c-9879-825b66400dc6","fields":{"slug":"/debug01/"},"frontmatter":{"title":"디버깅 환경 : Chrome DevTools로 에러 발생 원인 파악하기"}}},{"node":{"id":"014caa5e-050c-58cb-9c41-612cd5d0ede2","fields":{"slug":"/debug02/"},"frontmatter":{"title":"디버깅 환경 : 디버거의 Breakpoint를 활용한 문제 해결"}}}]},"previous":{"fields":{"slug":"/eslint/"},"frontmatter":{"title":"협업을 위한 프로젝트 설정 - ESLint"}},"next":{"fields":{"slug":"/husky/"},"frontmatter":{"title":"협업을 위한 프로젝트 설정 - husky + lint-staged"}}},"pageContext":{"id":"76430891-9c35-5424-8f64-5ce947d3c32e","series":"Dev Environment","previousPostId":"6a885fc6-db67-5e8e-87eb-b695ef8c1df6","nextPostId":"8f667285-8ab0-5043-b4ae-f4fc69bad25e"}},"staticQueryHashes":[],"slicesMap":{}}