{"componentChunkName":"component---src-templates-post-jsx","path":"/reactnative03/","result":{"data":{"site":{"siteMetadata":{"title":"joy.blog"}},"markdownRemark":{"id":"76c644be-9f1a-5c37-b8de-4bbb0aee848a","excerpt":"AppLoading 이란 React Native가 앱을 초기화(API 호출, 데이터베이스 로딩, 이미지 파일 다운로드)하는 동안 로딩 화면을 보여주는 컴포넌트 Installation Props  : 로딩이 끝나면 호출되는 함수  : 에러 발생 시, 실행시킬 함수  : Promise가 resolve되거나 종료되었을 때 promise를 반환해주는 함수 (로딩…","html":"<h2>AppLoading 이란</h2>\n<blockquote>\n<p>React Native가 앱을 초기화(API 호출, 데이터베이스 로딩, 이미지 파일 다운로드)하는 동안 로딩 화면을 보여주는 컴포넌트</p>\n</blockquote>\n<h3>Installation</h3>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">expo <span class=\"token function\">install</span> expo-app-loading</code></pre></div>\n<h3>Props</h3>\n<ul>\n<li><code class=\"language-text\">onFinish</code> : 로딩이 끝나면 호출되는 함수</li>\n<li><code class=\"language-text\">onError</code> : 에러 발생 시, 실행시킬 함수</li>\n<li><code class=\"language-text\">startAsync</code> : Promise가 resolve되거나 종료되었을 때 promise를 반환해주는 함수 (로딩에 필요한 항목들을 await 함수로 만들어 실행시켜줌)</li>\n</ul>\n<h3>사용 예시</h3>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token keyword\">import</span> AppLoading <span class=\"token keyword\">from</span> <span class=\"token string\">\"expo-app-loading\"</span>\n<span class=\"token keyword\">import</span> React<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span> useState <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"react\"</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> Text <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"react-native\"</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token keyword\">function</span> <span class=\"token function\">App</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> <span class=\"token punctuation\">[</span>ready<span class=\"token punctuation\">,</span> setReady<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token function\">useState</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span>\n  <span class=\"token keyword\">const</span> <span class=\"token function-variable function\">onFinish</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token function\">setReady</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span>\n  <span class=\"token keyword\">const</span> <span class=\"token function-variable function\">startLoading</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">async</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// 로딩에 필요한 항목들</span>\n    <span class=\"token keyword\">await</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Promist</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">resolve</span> <span class=\"token operator\">=></span> <span class=\"token function\">setTimeout</span><span class=\"token punctuation\">(</span>resolve<span class=\"token punctuation\">,</span> <span class=\"token number\">4000</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>ready<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// 로딩되는 동안 AppLoading 보여주기!</span>\n    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">AppLoading</span></span>\n        <span class=\"token attr-name\">startAsync</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>startLoading<span class=\"token punctuation\">}</span></span>\n        <span class=\"token attr-name\">onFinish</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>onFinish<span class=\"token punctuation\">}</span></span>\n        <span class=\"token attr-name\">onError</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>console<span class=\"token punctuation\">.</span>error<span class=\"token punctuation\">}</span></span>\n      <span class=\"token punctuation\">/></span></span>\n    <span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span>\n  <span class=\"token keyword\">return</span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Text</span></span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">We are done loading!</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span><span class=\"token class-name\">Text</span></span><span class=\"token punctuation\">></span></span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h3>폰트 / 이미지파일 preload</h3>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">expo <span class=\"token function\">install</span> expo-font\nexpo <span class=\"token function\">install</span> expo-asset</code></pre></div>\n<ol>\n<li><strong>Fonts &#x26; Assets Hook 사용하기</strong></li>\n</ol>\n<p>기타 필요한 작업이 없고 오직! 폰트와 이미지 load 만 필요한경우 hook을 써서 간단하게 구현할 수 있다. <br/> 원격이미지를 불러오는 <code class=\"language-text\">Image.prefetch()</code>는 사용 불가!</p>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token keyword\">function</span> <span class=\"token function\">App</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">const</span> <span class=\"token punctuation\">[</span>assets<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token function\">useAssets</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"./my-face.jpeg\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">const</span> <span class=\"token punctuation\">[</span>loaded<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> Font<span class=\"token punctuation\">.</span><span class=\"token function\">useFonts</span><span class=\"token punctuation\">(</span>Ionicons<span class=\"token punctuation\">.</span>font<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>assets <span class=\"token operator\">||</span> <span class=\"token operator\">!</span>loaded<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t\t<span class=\"token keyword\">return</span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">AppLoading</span></span> <span class=\"token punctuation\">/></span></span>\n\t<span class=\"token punctuation\">}</span></code></pre></div>\n<br/>\n<ol start=\"2\">\n<li><strong>함수 만들어서 사용</strong></li>\n</ol>\n<p>폰트, 이미지 이외에도 로딩할 작업이 있는 경우 ( API 호출, 데이터베이스 초기화 등…) 아래와 같이 함수를 생성해서 사용한다.</p>\n<ul>\n<li>Font, Asset 불러오기함수를 나열한 형태</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token keyword\">const</span> <span class=\"token function-variable function\">startLoading</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">async</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">await</span> Font<span class=\"token punctuation\">.</span><span class=\"token function\">loadAsync</span><span class=\"token punctuation\">(</span>Ionicons<span class=\"token punctuation\">.</span>font<span class=\"token punctuation\">)</span>\n  <span class=\"token keyword\">await</span> Asset<span class=\"token punctuation\">.</span><span class=\"token function\">loadAsync</span><span class=\"token punctuation\">(</span><span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"./my-face.jpeg\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n  <span class=\"token keyword\">await</span> Image<span class=\"token punctuation\">.</span><span class=\"token function\">prefetch</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"https://reactnative.dev/img/oss_logo.png\"</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<ul>\n<li>Font, Asset 인자를 배열로 받는 유틸함수를 만들고 <code class=\"language-text\">Promise.all</code>을 사용해서 한꺼번에 호출하는 형태</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token keyword\">import</span> <span class=\"token operator\">*</span> <span class=\"token keyword\">as</span> Font <span class=\"token keyword\">from</span> <span class=\"token string\">\"expo-font\"</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> Text<span class=\"token punctuation\">,</span> Image <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"react-native\"</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> Ionicons <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"@expo/vector-icons\"</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> Asset<span class=\"token punctuation\">,</span> useAssets <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"expo-asset\"</span>\n\n<span class=\"token keyword\">const</span> <span class=\"token function-variable function\">loadFonts</span> <span class=\"token operator\">=</span> <span class=\"token parameter\">fonts</span> <span class=\"token operator\">=></span> fonts<span class=\"token punctuation\">.</span><span class=\"token function\">map</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">font</span> <span class=\"token operator\">=></span> Font<span class=\"token punctuation\">.</span><span class=\"token function\">loadAsync</span><span class=\"token punctuation\">(</span>font<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">const</span> <span class=\"token function-variable function\">loadImages</span> <span class=\"token operator\">=</span> <span class=\"token parameter\">images</span> <span class=\"token operator\">=></span>\n  images<span class=\"token punctuation\">.</span><span class=\"token function\">map</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">image</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token keyword\">typeof</span> image <span class=\"token operator\">===</span> <span class=\"token string\">\"string\"</span>\n      <span class=\"token operator\">?</span> Image<span class=\"token punctuation\">.</span><span class=\"token function\">prefetch</span><span class=\"token punctuation\">(</span>image<span class=\"token punctuation\">)</span>\n      <span class=\"token operator\">:</span> Asset<span class=\"token punctuation\">.</span><span class=\"token function\">loadAsync</span><span class=\"token punctuation\">(</span>image<span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token keyword\">function</span> <span class=\"token function\">App</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> <span class=\"token punctuation\">[</span>ready<span class=\"token punctuation\">,</span> setReady<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token function\">useState</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span>\n  <span class=\"token keyword\">const</span> <span class=\"token function-variable function\">onFinish</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token function\">setReady</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span>\n  <span class=\"token keyword\">const</span> <span class=\"token function-variable function\">startLoading</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">async</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">const</span> fonts <span class=\"token operator\">=</span> <span class=\"token function\">loadFonts</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span>Ionicons<span class=\"token punctuation\">.</span>font<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">const</span> images <span class=\"token operator\">=</span> <span class=\"token function\">loadImages</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span>\n      <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"./my-face.jpeg\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n      <span class=\"token string\">\"https://reactnative.dev/img/oss_logo.png\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">await</span> Promise<span class=\"token punctuation\">.</span><span class=\"token function\">all</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token operator\">...</span>fonts<span class=\"token punctuation\">,</span> <span class=\"token operator\">...</span>images<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>ready<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// 로딩되는 동안 AppLoading 보여주기!</span>\n    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">AppLoading</span></span>\n        <span class=\"token attr-name\">startAsync</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>startLoading<span class=\"token punctuation\">}</span></span>\n        <span class=\"token attr-name\">onFinish</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>onFinish<span class=\"token punctuation\">}</span></span>\n        <span class=\"token attr-name\">onError</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>console<span class=\"token punctuation\">.</span>error<span class=\"token punctuation\">}</span></span>\n      <span class=\"token punctuation\">/></span></span>\n    <span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span>\n  <span class=\"token keyword\">return</span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Text</span></span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">We are done loading!</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span><span class=\"token class-name\">Text</span></span><span class=\"token punctuation\">></span></span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<br/>\n<br/>\n<blockquote>\n<p>REFERENCE <br/>\nReact Native 공식 문서 <a href=\"https://reactnative.dev/docs/getting-started\">https://reactnative.dev/docs/getting-started</a> <br/> Expo 공식 문서 <a href=\"https://docs.expo.dev/\">https://docs.expo.dev/</a> <br/> Nomad Coder <a href=\"https://nomadcoders.co/react-native-for-beginners/lobby\">https://nomadcoders.co/react-native-for-beginners/lobby</a></p>\n</blockquote>","frontmatter":{"title":"[React Native] AppLoading 컴포넌트","date":"February 24, 2023","update":"February 24, 2023","tags":["react-native"],"series":"React Native"},"fields":{"slug":"/reactnative03/","readingTime":{"minutes":3}}},"seriesList":{"edges":[{"node":{"id":"c356fa49-a838-57c4-ac97-cf162aa0015e","fields":{"slug":"/reactnative01/"},"frontmatter":{"title":"[React Native] 설치 및 세팅하기"}}},{"node":{"id":"b9d90ae8-e0ed-5137-8fd8-2d4b73e20dd0","fields":{"slug":"/reactnative02/"},"frontmatter":{"title":"[React Native] 꼭 알아야할 주요 특징"}}},{"node":{"id":"76c644be-9f1a-5c37-b8de-4bbb0aee848a","fields":{"slug":"/reactnative03/"},"frontmatter":{"title":"[React Native] AppLoading 컴포넌트"}}},{"node":{"id":"92b2e85c-ecd0-5e36-a48b-8fb0f46723bb","fields":{"slug":"/reactnative04/"},"frontmatter":{"title":"[React Native] Tab Navigator"}}},{"node":{"id":"034c5910-5f6b-5875-86c9-28f9e08b4e24","fields":{"slug":"/reactnative05/"},"frontmatter":{"title":"[React Native] Stack Navigator"}}},{"node":{"id":"cf6a0fe7-dcb9-58a7-8115-6a3e8d660f67","fields":{"slug":"/reactnative06/"},"frontmatter":{"title":"[React Native] Dark & Light 테마 적용하기"}}},{"node":{"id":"9848af5c-2ceb-56e3-8ce3-5a5fddd32f5d","fields":{"slug":"/reactnative07/"},"frontmatter":{"title":"[React Native] React Native로 날씨앱 만들기 with Expo"}}}]},"previous":{"fields":{"slug":"/reactnative02/"},"frontmatter":{"title":"[React Native] 꼭 알아야할 주요 특징"}},"next":{"fields":{"slug":"/reactnative04/"},"frontmatter":{"title":"[React Native] Tab Navigator"}}},"pageContext":{"id":"76c644be-9f1a-5c37-b8de-4bbb0aee848a","series":"React Native","previousPostId":"b9d90ae8-e0ed-5137-8fd8-2d4b73e20dd0","nextPostId":"92b2e85c-ecd0-5e36-a48b-8fb0f46723bb"}},"staticQueryHashes":[],"slicesMap":{}}