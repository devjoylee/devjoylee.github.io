{"componentChunkName":"component---src-templates-post-jsx","path":"/data-structure04/","result":{"data":{"site":{"siteMetadata":{"title":"joy.blog"}},"markdownRemark":{"id":"9bf26e22-2318-5e18-8a2e-2077b0e0d362","excerpt":"리스트 (List) List는 sequence라고도 불리며 \"순서\"를 가지고 원소를 저장하는 자료구조이다.\nList 구현은 크게 2가지로 나뉘는데 Array List와 Linked List가 있다. python에서 사용하는  자료구조는 Array List 형태이다. Array List Array List는 말 그대로 배열을 기반으로 만들어진 자료구조이다.…","html":"<h2>리스트 (List)</h2>\n<p>List는 sequence라고도 불리며 \"순서\"를 가지고 원소를 저장하는 자료구조이다.\nList 구현은 크게 2가지로 나뉘는데 Array List와 Linked List가 있다. python에서 사용하는 <code class=\"language-text\">list</code> 자료구조는 Array List 형태이다.</p>\n<img width='600' alt='' src='https://github.com/devjoylee/devjoylee/assets/68415905/f52de651-75d7-495d-b3cd-0c17ea8f35d7'>\n<h2>Array List</h2>\n<p>Array List는 말 그대로 배열을 기반으로 만들어진 자료구조이다. <br/> 크기가 고정된 static array와 크기 변화를 줄 수 있는 dynamic array가 있다.</p>\n<h2>1. Static Array</h2>\n<blockquote>\n<p><strong>정적 배열 (Static Array)</strong> : 정해진 size만큼 <strong>연속된 메모리</strong>를 할당 받아 data를 순차적으로 저장하는 자료구조</p>\n</blockquote>\n<h3>배열의 특성</h3>\n<ol>\n<li>고정된 저장 공간(fixed-size)</li>\n<li>순차적인 데이터 저장(order)</li>\n</ol>\n<p>예시)</p>\n<div class=\"gatsby-highlight\" data-language=\"c\"><pre class=\"language-c\"><code class=\"language-c\"><span class=\"token keyword\">int</span> arr<span class=\"token punctuation\">[</span><span class=\"token number\">5</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">7</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">6</span><span class=\"token punctuation\">}</span> <span class=\"token comment\">// size가 5인 int형 배열 선언</span></code></pre></div>\n<p>배열이 선언되면 데이터를 저장할 메모리 공간을 먼저 확보한다.<br/>\n→ int형 데이터 5개를 가진 배열을 만들기 위해서는 총 20 byte의 공간이 필요하다. <code class=\"language-text\">4byte(int형 데이터) * 5(size) = 20 byte</code><br/>\n→ 첫 번째 값부터 순차적으로 메모리에 저장한다.</p>\n<img width='1000' alt='' src='https://github.com/devjoylee/devjoylee/assets/68415905/4030bf8d-0d9f-4672-9eb3-400578d18288'>\n<h3>Random Access</h3>\n<p><strong>Random Access</strong>는 자료 구조에서 특정 데이터에 직접 접근할 수 있는 능력을 의미한다.</p>\n<p>배열(Array)은 대표적인 random access 가능한 데이터 구조이다. 일반적으로 데이터에 접근하려면 해당 데이터의 메모리 주소값을 알아야 한다. 배열에 저장된 값은 메모리에 연속적으로 할당되기 때문에 배열의 첫 주소값만 알면 어떤 index에도 바로 접근할 수 있다. <code class=\"language-text\">(첫 주소값 + index)</code></p>\n<p>즉 O(1)의 시간복잡도로 접근이 가능하다.</p>\n<br/> \n<h2>2. Dynamic Array</h2>\n<blockquote>\n<p>동적 배열 (Dynamic Array) : 배열의 크기(size)를 변경(resizing)할 수 있는 배열</p>\n</blockquote>\n<p>데이터의 갯수가 정해져 있을 때는 static array를 사용하는 것이 매우 효율적이다. 하지만 배열 크기보다 더 많은 데이터를 저장해야 하는 경우에는 공간 부족으로 문제가 발생할 수 있다. 이런 문제를 보안하기 위해서 Dynamic Array 방식이 사용된다.</p>\n<h3>Resizing 과정</h3>\n<p>기존 배열의 할당된 크기를 초과하여 데이터가 생성된 경우 배열을 resize하는 과정은 다음과 같다:</p>\n<ol>\n<li><strong>데이터 추가 요청</strong>: 동적 배열에 새로운 데이터를 추가하려고 합니다.</li>\n<li><strong>배열 size 초과 확인</strong>: 현재 배열의 크기가 새로운 데이터를 추가하기에 충분한지 확인합니다.</li>\n<li><strong>다른 위치에 새로운 배열 생성 (더블링)</strong>: 기존 배열의 크기의 2배인 새로운 배열을 메모리에 생성합니다.</li>\n<li><strong>기존 데이터 복사</strong>: 기존 배열의 모든 데이터를 새로운 배열로 복사합니다.</li>\n<li><strong>새로운 배열에 데이터 추가</strong>: 새로운 배열의 적절한 위치에 새로운 데이터를 추가합니다.</li>\n<li><strong>기존 배열 삭제 (free)</strong>: 메모리에서 기존 배열을 해제(free)합니다.</li>\n</ol>\n<h3>배열 연산과 시간복잡도</h3>\n<p>배열 크기를 명시하지 않아도 되는 dynamic array는 코딩테스트에서 자주 사용된다. 그 예로 Python에는 dynamic array로 구현된 <code class=\"language-text\">list</code> 자료형이 있다. <code class=\"language-text\">list</code>의 연산과 해당하는 시간복잡도는 아래와 같다.</p>\n<table>\n<thead>\n<tr>\n<th></th>\n<th>Static array</th>\n<th>Dynamic array</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>access / update</td>\n<td><span class=\"math math-inline\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>O</mi><mo stretchy=\"false\">(</mo><mn>1</mn><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">O(1)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">O</span><span class=\"mopen\">(</span><span class=\"mord\">1</span><span class=\"mclose\">)</span></span></span></span></span></td>\n<td><span class=\"math math-inline\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>O</mi><mo stretchy=\"false\">(</mo><mn>1</mn><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">O(1)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">O</span><span class=\"mopen\">(</span><span class=\"mord\">1</span><span class=\"mclose\">)</span></span></span></span></span></td>\n</tr>\n<tr>\n<td>insert_back</td>\n<td><span class=\"math math-inline\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>O</mi><mo stretchy=\"false\">(</mo><mn>1</mn><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">O(1)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">O</span><span class=\"mopen\">(</span><span class=\"mord\">1</span><span class=\"mclose\">)</span></span></span></span></span></td>\n<td>amortized <span class=\"math math-inline\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>O</mi><mo stretchy=\"false\">(</mo><mn>1</mn><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">O(1)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">O</span><span class=\"mopen\">(</span><span class=\"mord\">1</span><span class=\"mclose\">)</span></span></span></span></span></td>\n</tr>\n<tr>\n<td>delete_back</td>\n<td><span class=\"math math-inline\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>O</mi><mo stretchy=\"false\">(</mo><mn>1</mn><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">O(1)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">O</span><span class=\"mopen\">(</span><span class=\"mord\">1</span><span class=\"mclose\">)</span></span></span></span></span></td>\n<td><span class=\"math math-inline\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>O</mi><mo stretchy=\"false\">(</mo><mn>1</mn><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">O(1)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">O</span><span class=\"mopen\">(</span><span class=\"mord\">1</span><span class=\"mclose\">)</span></span></span></span></span></td>\n</tr>\n<tr>\n<td>insert_at</td>\n<td><span class=\"math math-inline\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>O</mi><mo stretchy=\"false\">(</mo><mi>n</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">O(n)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">O</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">n</span><span class=\"mclose\">)</span></span></span></span></span></td>\n<td><span class=\"math math-inline\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>O</mi><mo stretchy=\"false\">(</mo><mi>n</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">O(n)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">O</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">n</span><span class=\"mclose\">)</span></span></span></span></span></td>\n</tr>\n<tr>\n<td>delete_at</td>\n<td><span class=\"math math-inline\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>O</mi><mo stretchy=\"false\">(</mo><mi>n</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">O(n)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">O</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">n</span><span class=\"mclose\">)</span></span></span></span></span></td>\n<td><span class=\"math math-inline\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>O</mi><mo stretchy=\"false\">(</mo><mi>n</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">O(n)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">O</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">n</span><span class=\"mclose\">)</span></span></span></span></span></td>\n</tr>\n</tbody>\n</table>\n<p><strong>리스트의 선언</strong> : <code class=\"language-text\">a = [1, 2, 3]</code></p>\n<p><strong>리스트 접근하기</strong></p>\n<ul>\n<li>0번째 원소 접근 하기 : <code class=\"language-text\">a[0]</code> → <span class=\"math math-inline\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>O</mi><mo stretchy=\"false\">(</mo><mn>1</mn><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">O(1)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">O</span><span class=\"mopen\">(</span><span class=\"mord\">1</span><span class=\"mclose\">)</span></span></span></span></span></li>\n<li>0번째 원소 업데이트 하기 : <code class=\"language-text\">a[0] = 3</code> → <span class=\"math math-inline\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>O</mi><mo stretchy=\"false\">(</mo><mn>1</mn><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">O(1)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">O</span><span class=\"mopen\">(</span><span class=\"mord\">1</span><span class=\"mclose\">)</span></span></span></span></span></li>\n</ul>\n<p><strong>리스트의 원소 추가</strong></p>\n<ul>\n<li>\n<p>마지막에 원소 추가 : <code class=\"language-text\">a.append(1)</code> → <span class=\"math math-inline\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>O</mi><mo stretchy=\"false\">(</mo><mn>1</mn><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">O(1)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">O</span><span class=\"mopen\">(</span><span class=\"mord\">1</span><span class=\"mclose\">)</span></span></span></span></span></p>\n</li>\n<li>\n<p>중간에 원소 추가 : <code class=\"language-text\">a.insert(2,10)</code> → <span class=\"math math-inline\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>O</mi><mo stretchy=\"false\">(</mo><mi>n</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">O(n)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">O</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">n</span><span class=\"mclose\">)</span></span></span></span></span></p>\n<p>⇒ 2번째 index에 10을 추가한다</p>\n</li>\n</ul>\n<p><strong>리스트 원소 삭제</strong></p>\n<ul>\n<li>\n<p>마지막 원소 삭제 : <code class=\"language-text\">a.pop()</code> → <span class=\"math math-inline\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>O</mi><mo stretchy=\"false\">(</mo><mn>1</mn><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">O(1)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">O</span><span class=\"mopen\">(</span><span class=\"mord\">1</span><span class=\"mclose\">)</span></span></span></span></span></p>\n</li>\n<li>\n<p>중간 원소 삭제 : <code class=\"language-text\">a.pop(2)</code> / <code class=\"language-text\">a.remove(2)</code> → <span class=\"math math-inline\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>O</mi><mo stretchy=\"false\">(</mo><mi>n</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">O(n)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">O</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">n</span><span class=\"mclose\">)</span></span></span></span></span></p>\n<p>⇒ <code class=\"language-text\">pop(2)</code> : 2번째 index에 있는 값을 삭제</p>\n<p>⇒ <code class=\"language-text\">remove(2)</code> : 값 ‘2’를 찾아서 삭제. 없으면 error</p>\n</li>\n</ul>","frontmatter":{"title":"[Data Structure] List - Array & Dynamic Array ","date":"February 16, 2024","update":"January 16, 2024","tags":["datastructure"],"series":"Data Structure"},"fields":{"slug":"/data-structure04/","readingTime":{"minutes":5.55}}},"seriesList":{"edges":[{"node":{"id":"92f3d338-07cc-5841-8ae3-47582ebd98d3","fields":{"slug":"/data-structure01/"},"frontmatter":{"title":"[Data Structure] 자료구조와 알고리즘"}}},{"node":{"id":"aef7201e-310f-5244-aa46-76df1320631b","fields":{"slug":"/data-structure02/"},"frontmatter":{"title":"[Data Structure] 시간 복잡도와 Big-O 표기법"}}},{"node":{"id":"60c54983-3540-5f7f-8da9-fea322f68e90","fields":{"slug":"/data-structure03/"},"frontmatter":{"title":"[Data Structure] 메모리 구조와 Node의 주소값"}}},{"node":{"id":"9bf26e22-2318-5e18-8a2e-2077b0e0d362","fields":{"slug":"/data-structure04/"},"frontmatter":{"title":"[Data Structure] List - Array & Dynamic Array "}}}]},"previous":{"fields":{"slug":"/data-structure03/"},"frontmatter":{"title":"[Data Structure] 메모리 구조와 Node의 주소값"}},"next":{"fields":{"slug":"/eslint/"},"frontmatter":{"title":"협업을 위한 프로젝트 설정 - ESLint"}}},"pageContext":{"id":"9bf26e22-2318-5e18-8a2e-2077b0e0d362","series":"Data Structure","previousPostId":"60c54983-3540-5f7f-8da9-fea322f68e90","nextPostId":"6a885fc6-db67-5e8e-87eb-b695ef8c1df6"}},"staticQueryHashes":[],"slicesMap":{}}