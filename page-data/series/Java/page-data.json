{"componentChunkName":"component---src-templates-series-jsx","path":"/series/Java/","result":{"data":{"posts":{"nodes":[{"excerpt":"1. 변수와 데이터 타입 자바에서는 변수 사용 시 반드시 타입을 명시해야 한다. 한번 선언된 타입은 변경할 수 없다. 기본 자료형 (Primitive Types) 실제 값을 저장하는 자료형 참조 자료형 (Reference Types) 데이터의 '주소'를 저장하는 자료형. 클래스, 인터페이스, 배열과 같은 자료형이 있다. 사용할 때는  예약어를 통해 생성한…","fields":{"slug":"/java01/"},"frontmatter":{"date":"January 22, 2025","update":"Jan 22, 2025","title":"[Java] 기초 개념 : 변수/자료형/접근제어자/static","tags":["java","fullstack"]}},{"excerpt":"1. 클래스란? 클래스는 객체 지향 프로그래밍(OOP)의 기본 구성 요소로 관련된 데이터와 메서드를 하나의 단위로 묶어주는 템플릿이다. 클래스를 사용하는 이유 코드의 재사용성 향상 유지보수의 용이성 코드의 구조화와 직관성 향상 데이터의 캡슐화 가능 2. 클래스의 기본 구조 필드(Fields): 클래스의 “상태”를 나타내는 변수들 생성자(Constructo…","fields":{"slug":"/java02/"},"frontmatter":{"date":"January 23, 2025","update":"Jan 23, 2025","title":"[Java] 클래스의 기본 특징 : 속성/생성자/메서드/this/super","tags":["java","fullstack"]}}]}},"pageContext":{"series":"Java"}},"staticQueryHashes":[],"slicesMap":{}}