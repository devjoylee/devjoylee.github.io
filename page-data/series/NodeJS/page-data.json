{"componentChunkName":"component---src-templates-series-jsx","path":"/series/NodeJS","result":{"data":{"posts":{"nodes":[{"excerpt":"🔎 Node란? Nodejs : Chrome V8 Javascript 엔진으로 빌드된 Javascript 런타임 공식문서에서의 노드는 Javascript 런타임이라고 표현되어 있습니다. 하지만 대부분은 Node를 서버 실행을 위해 사용합니다. 여기서 '서버'와 '런타임'은 무엇이고 어떤 차이가 있을까요? 서버로서의 노드 네트워크는 요청과 응답을 주고받으며…","fields":{"slug":"/node-tutorial-01/"},"frontmatter":{"date":"July 27, 2022","update":"Jul 27, 2022","title":"[Node] 서버와 런타임 개념 이해하기","tags":["nodejs"]}},{"excerpt":"🚀 호출스택과 이벤트 루프 1. 호출 스택 (call stack) 노드는 자바스크립트 코드의 맨 위부터 한 줄씩 실행합니다. 함수 호출 부분을 발견하면 호출한 함수를 호출 스택에 넣고, 함수가 실행되는 동안 호출 스택에 머물러 있다가 실행이 완료되면 호출 스택에서 지워집니다. (Last In First Out) 함수는 호출 순서대로 스택에 쌓인 후, 역순…","fields":{"slug":"/node-tutorial-02/"},"frontmatter":{"date":"July 31, 2022","update":"Jul 31, 2022","title":"[Node] 호출스택과 이벤트 루프","tags":["nodejs"]}},{"excerpt":"📚 노드의 주요 특성 1. 이벤트 기반 노드는 이벤트 발생 시 미리 지정해둔 작업을 수행하는 이벤트 기반으로 작동합니다. 이벤트가 생기면 해당 이벤트에 대한 함수를 Event Listener에서 찾아 Callback 함수를 호출합니다. 이벤트의 예: 클릭, 네트워크 요청, 타이머 등 Event Listener : 이벤트를 등록하는 함수 Callback 함…","fields":{"slug":"/node-tutorial-03/"},"frontmatter":{"date":"August 02, 2022","update":"Aug 02, 2022","title":"[Node] 노드의 주요 특성 (논블로킹 싱글스레드 모델)","tags":["nodejs"]}},{"excerpt":"3-3 ~ 3-6 🔎 모듈 이란? 노드는 코드를 모듈로 만들 수 있다는 점에서 브라우저의 자바스크립트와 다릅니다. 모듈로 만들어두면 여러 프로그램에 해당 모듈을 재사용할 수 있습니다. 자바스크립트에서 코드를 재사용하기 위해 함수로 만드는 것과 비슷하며 노드에서는 보통 파일 하나가 모듈 하나가 됩니다. 파일별로 코드를 모듈화할 수 있어 관리하기 편합니다. …","fields":{"slug":"/node-tutorial-04/"},"frontmatter":{"date":"August 04, 2022","update":"Aug 04, 2022","title":"[Node] 노드 내장 객체 알아보기","tags":["nodejs"]}},{"excerpt":"3-7 ~ 3-11 🔎 모듈 이란? 노드는 코드를 모듈로 만들 수 있다는 점에서 브라우저의 자바스크립트와 다릅니다. 모듈로 만들어두면 여러 프로그램에 해당 모듈을 재사용할 수 있습니다. 자바스크립트에서 코드를 재사용하기 위해 함수로 만드는 것과 비슷하며 노드에서는 보통 파일 하나가 모듈 하나가 됩니다. 파일별로 코드를 모듈화할 수 있어 관리하기 편합니다.…","fields":{"slug":"/node-tutorial-05/"},"frontmatter":{"date":"August 04, 2022","update":"Aug 04, 2022","title":"[Node] 노드 내장 모듈 사용하기","tags":["nodejs"]}}]}},"pageContext":{"series":"NodeJS"}},"staticQueryHashes":[]}