{"componentChunkName":"component---src-templates-post-jsx","path":"/web02/","result":{"data":{"site":{"siteMetadata":{"title":"joy.blog"}},"markdownRemark":{"id":"ce89c03d-e30a-5c34-9da9-43d05dbb9c67","excerpt":"1. HTTP란? HTTP란 Hypertext Transfer Protocol의 약자로 웹에서 클라이언트와 서버 간의 통신을 위해 정해진 규칙, 통신 규약이다. 웹 페이지를 요청하거나, 서버로 데이터를 전송하는 등 인터넷 상의 거의 모든 작업이 HTTP를 통해 이루어진다. 크게 아래와 같은 특징이 있다. Connectionless: 요청과 응답이 완료되면…","html":"<h2>1. HTTP란?</h2>\n<p>HTTP란 Hypertext Transfer Protocol의 약자로 웹에서 클라이언트와 서버 간의 통신을 위해 정해진 규칙, <strong>통신 규약</strong>이다. 웹 페이지를 요청하거나, 서버로 데이터를 전송하는 등 인터넷 상의 거의 모든 작업이 HTTP를 통해 이루어진다. 크게 아래와 같은 특징이 있다.</p>\n<ul>\n<li><strong>Connectionless</strong>: 요청과 응답이 완료되면 연결이 끊어진다.</li>\n<li><strong>Stateless</strong>: 각 요청은 서로 독립적이며 이전 요청의 상태를 저장하지 않는다.</li>\n<li><strong>Flexibility</strong>: 텍스트, 이미지, 비디오, JSON 등 다양한 데이터를 전송할 수 있다.</li>\n</ul>\n<h2>2. HTTP 통신의 동작 원리</h2>\n<p>HTTP는 <em>요청(Request)과 응답(Response) 메시지</em>를 주고받는 방식으로 동작한다. 클라이언트가 요청을 보내면 서버는 이를 처리한 뒤 응답을 반환한다. HTTP 메시지는 크게 두 부분으로 나뉜다.</p>\n<ol>\n<li><strong>HTTP Header :</strong> 메시지에 대한 메타 정보(프로토콜 버전, 인증 정보 등)를 포함한다.</li>\n<li><strong>HTTP Body :</strong> 실제 요청하거나 응답하는 데이터를 담고 있다. (HTML, JSON, 이미지 등)</li>\n</ol>\n<h3>Request Message</h3>\n<p>클라이언트에서 서버로 특정 작업(CRUD)을 요청할 때 사용하는 메시지이다.</p>\n<ul>\n<li>헤더 첫줄 정보 : <code class=\"language-text\">Method</code>(요청작업 명시) + <code class=\"language-text\">Path</code>(요청 자원의 위치) + <code class=\"language-text\">Protocol Version</code></li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token comment\"># Header</span>\nPOST /api/login HTTP/1.1 <span class=\"token comment\"># method path protocol</span>\nHost: www.example.com\nContent-Type: application/json\nContent-Length: <span class=\"token number\">57</span>\n\n<span class=\"token comment\"># Body</span>\n<span class=\"token punctuation\">{</span>\n  <span class=\"token string\">\"username\"</span><span class=\"token builtin class-name\">:</span> <span class=\"token string\">\"kim123\"</span>,\n  <span class=\"token string\">\"password\"</span><span class=\"token builtin class-name\">:</span> <span class=\"token string\">\"mypassword123\"</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<blockquote>\n<p>❗️ Request Method 종류 <br/> <strong><code class=\"language-text\">GET</code></strong> (데이터 조회), <strong><code class=\"language-text\">POST</code></strong> (데이터 전송), <strong><code class=\"language-text\">DELETE</code></strong> (데이터 삭제), <strong><code class=\"language-text\">PUT/PATCH</code></strong> (데이터 수정)</p>\n</blockquote>\n</aside>\n<h3>Response Message</h3>\n<p>서버에서 클라이언트의 요청에 대한 처리 결과를 반환할 때 사용하는 메시지이다.</p>\n<ul>\n<li>헤더 첫줄 정보 : <code class=\"language-text\">Protocol Version</code> + <code class=\"language-text\">Status code</code>(처리 결과 코드) + <code class=\"language-text\">Status Message</code> (코드 설명)</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token comment\"># Header</span>\nHTTP/1.1 <span class=\"token number\">200</span> OK <span class=\"token comment\"># protocol code message</span>\nContent-Type: text/html\nContent-Length: <span class=\"token number\">1234</span>\n\n<span class=\"token comment\"># Body</span>\n<span class=\"token operator\">&lt;</span>html<span class=\"token operator\">></span>\n  <span class=\"token operator\">&lt;</span>body<span class=\"token operator\">></span>Success<span class=\"token operator\">!</span><span class=\"token operator\">&lt;</span>/body<span class=\"token operator\">></span>\n<span class=\"token operator\">&lt;</span>/html<span class=\"token operator\">></span></code></pre></div>\n<blockquote>\n<p>❗️ Response Status Code 종류 <br/> <strong><code class=\"language-text\">1xx</code></strong> (요청 처리중) <strong><code class=\"language-text\">2xx</code></strong> (요청 성공) <strong><code class=\"language-text\">3xx</code></strong> (리다이렉션) <strong><code class=\"language-text\">4xx</code></strong> (클라이언트 오류) <strong><code class=\"language-text\">5xx</code></strong> (서버 오류)</p>\n</blockquote>\n<h2>3. HTTPS란?</h2>\n<p>HTTPS는 HTTP에 Secure(보안) 기능이 추가된 프로토콜이다. HTTP는 데이터를 암호화하지 않기 때문에 중간에서 데이터가 탈취될 위험이 있는 반면, HTTPS는 데이터를 암호화하여 전송하여 신뢰성이 보장된다. 크게 아래와 같은 특징이 있다.</p>\n<ol>\n<li><strong>SSL/TLS 암호화 :</strong> HTTPS는 SSL(Secure Sockets Layer) 또는 TLS(Transport Layer Security) 프로토콜을 통해 데이터를 암호화함으로써 클라이언트와 서버 간의 데이터가 중간에서 탈취되거나 변조되는 것을 방지한다.</li>\n<li><strong>인증 :</strong> 클라이언트는 서버가 신뢰할 수 있는 기관에서 발급받은 인증서를 통해 서버의 신뢰성을 보장한다.</li>\n<li><strong>데이터 무결성 :</strong> 전송 중 데이터가 변조되지 않도록 보호한다.</li>\n</ol>\n<h3>HTTP와의 차이점</h3>\n<table>\n<thead>\n<tr>\n<th>특징</th>\n<th>HTTP</th>\n<th>HTTPS</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><strong>보안</strong></td>\n<td>데이터 암호화 없음</td>\n<td>SSL/TLS로 데이터 암호화</td>\n</tr>\n<tr>\n<td><strong>포트 번호</strong></td>\n<td>80</td>\n<td>443</td>\n</tr>\n<tr>\n<td><strong>속도</strong></td>\n<td>빠름</td>\n<td>암호화 과정으로 인해 약간 느림</td>\n</tr>\n<tr>\n<td><strong>인증서</strong></td>\n<td>없음</td>\n<td>CA에서 발급받은 인증서 필요</td>\n</tr>\n<tr>\n<td><strong>사용 사례</strong></td>\n<td>일반적인 웹 페이지</td>\n<td>금융, 로그인, 민감 데이터 전송 시 사용</td>\n</tr>\n</tbody>\n</table>\n<h2><strong>4. HTTPS의 중요성</strong></h2>\n<ul>\n<li>HTTPS는 로그인 정보, 결제 정보 등 민감한 데이터를 암호화하여 보호할 수 있다.</li>\n<li>HTTPS를 사용하는 웹사이트는 브라우저에서 \"안전함\"으로 표시되며, 사용자로부터 더 높은 신뢰를 얻을 수 있다.</li>\n<li>검색 엔진 최적화(SEO)에 유리하다. 검색 엔진에서 HTTPS를 사용하는 웹사이트는 더 높은 순위로 평가된다.</li>\n<li>최신 브라우저는 HTTPS를 기본으로 요구하며 HTTP만 사용하는 웹사이트는 경고 메시지가 표시될 수 있다.</li>\n</ul>","frontmatter":{"title":"웹 통신 규약, HTTP와 HTTPS에 대해서","date":"February 13, 2025","update":"February 13, 2025","tags":["web","webbrowser"],"series":"Web Architecture"},"fields":{"slug":"/web02/","readingTime":{"minutes":5.185}}},"seriesList":{"edges":[{"node":{"id":"891bf1e2-3e57-58cd-9994-187651c27342","fields":{"slug":"/rendering/"},"frontmatter":{"title":"브라우저의 렌더링 과정"}}},{"node":{"id":"ab200f52-6753-529b-a889-c681a107e9c7","fields":{"slug":"/csr-ssr/"},"frontmatter":{"title":"브라우저의 렌더링 종류 CSR vs SSR vs PR"}}},{"node":{"id":"7fe0b353-ac25-5cef-8c23-16e460140ebe","fields":{"slug":"/web01/"},"frontmatter":{"title":"Client와 Server의 역할과 통신 과정"}}},{"node":{"id":"ce89c03d-e30a-5c34-9da9-43d05dbb9c67","fields":{"slug":"/web02/"},"frontmatter":{"title":"웹 통신 규약, HTTP와 HTTPS에 대해서"}}},{"node":{"id":"64b10993-8823-5c63-8ee5-d815b94de558","fields":{"slug":"/web03/"},"frontmatter":{"title":"TCP vs UDP: Stateful과 Stateless의 차이 이해하기"}}}]},"previous":{"fields":{"slug":"/web01/"},"frontmatter":{"title":"Client와 Server의 역할과 통신 과정"}},"next":{"fields":{"slug":"/web03/"},"frontmatter":{"title":"TCP vs UDP: Stateful과 Stateless의 차이 이해하기"}}},"pageContext":{"id":"ce89c03d-e30a-5c34-9da9-43d05dbb9c67","series":"Web Architecture","previousPostId":"7fe0b353-ac25-5cef-8c23-16e460140ebe","nextPostId":"64b10993-8823-5c63-8ee5-d815b94de558"}},"staticQueryHashes":[],"slicesMap":{}}