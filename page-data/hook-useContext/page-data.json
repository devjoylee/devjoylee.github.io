{"componentChunkName":"component---src-templates-post-jsx","path":"/hook-useContext/","result":{"data":{"site":{"siteMetadata":{"title":"joy.blog"}},"markdownRemark":{"id":"7e295942-2bdf-5bb6-84a3-0dfc57e84e76","excerpt":"✨ useContext 정의 Context API : 전역적으로 사용되는 state나 데이터를 필요한 컴포넌트에 전달하는 방법 Context를 사용하면 컴포넌트를 재사용하기 어려워 질 수 있다. Prop drilling을 피하기 위한 목적이라면 Component Composition (컴포넌트 합성)을 먼저 고려해볼 것! **Prop drilling : …","html":"<h2>✨ useContext 정의</h2>\n<p><strong>Context API</strong> : 전역적으로 사용되는 state나 데이터를 필요한 컴포넌트에 전달하는 방법</p>\n<ul>\n<li>Context를 사용하면 컴포넌트를 재사용하기 어려워 질 수 있다.</li>\n<li><strong>Prop drilling</strong>을 피하기 위한 목적이라면 Component Composition (컴포넌트 합성)을 먼저 고려해볼 것! <br/>**<em>Prop drilling</em> : 컴포넌트가 필요한 데이터를 여러 컴포넌트를 거쳐 전달받는 과정</li>\n</ul>\n<p><img src=\"https://user-images.githubusercontent.com/68415905/155961762-07444598-b37f-4a31-991b-7cf610056aa4.png\" alt=\"Untitled\"></p>\n<h2>🌱 Context 사용 전</h2>\n<p>부모 App 컴포넌트에서 전역적으로 생성한 state를 자식 컴포넌트인 Header에서 사용하고자 합니다. state값은 App → Page → Header 순서로 전달됩니다. 중간에 있는 Page 컴포넌트는 state를 전달하는 매개체일 뿐, state 값을 사용하지는 않습니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token comment\">// App.js</span>\n<span class=\"token keyword\">function</span> <span class=\"token function\">App</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> <span class=\"token punctuation\">[</span>isDark<span class=\"token punctuation\">,</span> setIsDark<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token function\">useState</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span>\n  <span class=\"token keyword\">return</span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Page</span></span> <span class=\"token attr-name\">isDark</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>isDark<span class=\"token punctuation\">}</span></span> <span class=\"token attr-name\">setIsDark</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>setIsDark<span class=\"token punctuation\">}</span></span> <span class=\"token punctuation\">/></span></span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token comment\">// Page.js</span>\n<span class=\"token keyword\">function</span> <span class=\"token function\">Page</span><span class=\"token punctuation\">(</span><span class=\"token parameter\"><span class=\"token punctuation\">{</span> isDark<span class=\"token punctuation\">,</span> setIsDark <span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Header</span></span> <span class=\"token attr-name\">isDark</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>isDark<span class=\"token punctuation\">}</span></span> <span class=\"token punctuation\">/></span></span><span class=\"token plain-text\">\n      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Content</span></span> <span class=\"token attr-name\">isDark</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>isDark<span class=\"token punctuation\">}</span></span> <span class=\"token punctuation\">/></span></span><span class=\"token plain-text\">\n      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Footer</span></span> <span class=\"token attr-name\">isDark</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>isDark<span class=\"token punctuation\">}</span></span> <span class=\"token attr-name\">setIsDark</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>setIsDark<span class=\"token punctuation\">}</span></span> <span class=\"token punctuation\">/></span></span><span class=\"token plain-text\">\n    </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token comment\">// Header.js</span>\n<span class=\"token keyword\">function</span> <span class=\"token function\">Header</span><span class=\"token punctuation\">(</span><span class=\"token parameter\"><span class=\"token punctuation\">{</span> isDark <span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>header</span>\n      <span class=\"token attr-name\">style</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">{</span>\n        <span class=\"token literal-property property\">backgroundColor</span><span class=\"token operator\">:</span> isDark <span class=\"token operator\">?</span> <span class=\"token string\">\"black\"</span> <span class=\"token operator\">:</span> <span class=\"token string\">\"lightgray\"</span><span class=\"token punctuation\">,</span>\n        <span class=\"token literal-property property\">color</span><span class=\"token operator\">:</span> isDark <span class=\"token operator\">?</span> <span class=\"token string\">\"white\"</span> <span class=\"token operator\">:</span> <span class=\"token string\">\"black\"</span><span class=\"token punctuation\">,</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span></span>\n    <span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>header</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h2>🍀 Context 생성</h2>\n<p><code class=\"language-text\">context</code> 폴더를 만들고 js 파일을 생성한 후 context 코드를 작성합니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token comment\">// ThemeContext.js</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> createContext <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"react\"</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">const</span> ThemeContext <span class=\"token operator\">=</span> <span class=\"token function\">createContext</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span></code></pre></div>\n<h2>🌿 Context 전달</h2>\n<p>생성한 Context는 데이터를 가진 부모컴포넌트에 import 시킨 후 <code class=\"language-text\">Provider</code>로 컴포넌트를 감싸줍니다. 그리고 <code class=\"language-text\">value</code>라는 prop에 전달하고자 하는 데이터를 집어넣어 줍니다.</p>\n<p><code class=\"language-text\">Provider</code> 가 감싸는 모든 하위 컴포넌트는 <code class=\"language-text\">value</code>로 전달한 데이터에 접근이 가능합니다. <br/>(불필요한 props 전달 ❌)</p>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token comment\">// App.js</span>\n<span class=\"token keyword\">import</span> React<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span> useState <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"react\"</span>\n<span class=\"token keyword\">import</span> Page <span class=\"token keyword\">from</span> <span class=\"token string\">\"./components/Page\"</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> ThemeContext <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"./context/ThemeContext\"</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">App</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> <span class=\"token punctuation\">[</span>isDark<span class=\"token punctuation\">,</span> setIsDark<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token function\">useState</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span>\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">ThemeContext.Provider</span></span> <span class=\"token attr-name\">value</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">{</span> isDark<span class=\"token punctuation\">,</span> setIsDark <span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Page</span></span> <span class=\"token punctuation\">/></span></span><span class=\"token plain-text\">\n    </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span><span class=\"token class-name\">ThemeContext.Provider</span></span><span class=\"token punctuation\">></span></span>\n  <span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> App</code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token comment\">// Page.js</span>\n<span class=\"token keyword\">function</span> <span class=\"token function\">Page</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Header</span></span> <span class=\"token punctuation\">/></span></span><span class=\"token plain-text\">\n      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Content</span></span> <span class=\"token punctuation\">/></span></span><span class=\"token plain-text\">\n      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Footer</span></span> <span class=\"token punctuation\">/></span></span><span class=\"token plain-text\">\n    </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h2>🌳 Context 사용</h2>\n<p>부모 컴포넌트에서 Context 로 state값을 전달하면 자식 컴포넌트에서 <code class=\"language-text\">useContext</code>를 사용해 데이터를 가져옵니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token comment\">// Header.js</span>\n<span class=\"token keyword\">function</span> <span class=\"token function\">Header</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span> isDark <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> <span class=\"token function\">useContext</span><span class=\"token punctuation\">(</span>ThemeContext<span class=\"token punctuation\">)</span> <span class=\"token comment\">// Context 불러오기</span>\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>header</span>\n      <span class=\"token attr-name\">style</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">{</span>\n        <span class=\"token literal-property property\">backgroundColor</span><span class=\"token operator\">:</span> isDark <span class=\"token operator\">?</span> <span class=\"token string\">\"black\"</span> <span class=\"token operator\">:</span> <span class=\"token string\">\"lightgray\"</span><span class=\"token punctuation\">,</span>\n        <span class=\"token literal-property property\">color</span><span class=\"token operator\">:</span> isDark <span class=\"token operator\">?</span> <span class=\"token string\">\"white\"</span> <span class=\"token operator\">:</span> <span class=\"token string\">\"black\"</span><span class=\"token punctuation\">,</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span></span>\n    <span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>header</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token comment\">// Footer.js</span>\n<span class=\"token keyword\">import</span> React<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span> useContext <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"react\"</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> ThemeContext <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"../context/ThemeContext\"</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">Footer</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span> isDark<span class=\"token punctuation\">,</span> setIsDark <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> <span class=\"token function\">useContext</span><span class=\"token punctuation\">(</span>ThemeContext<span class=\"token punctuation\">)</span> <span class=\"token comment\">// Context 불러오기</span>\n  <span class=\"token keyword\">const</span> <span class=\"token function-variable function\">toggleTheme</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token function\">setIsDark</span><span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>isDark<span class=\"token punctuation\">)</span>\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>footer</span>\n      <span class=\"token attr-name\">style</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">{</span>\n        <span class=\"token literal-property property\">backgroundColor</span><span class=\"token operator\">:</span> isDark <span class=\"token operator\">?</span> <span class=\"token string\">\"black\"</span> <span class=\"token operator\">:</span> <span class=\"token string\">\"lightgray\"</span><span class=\"token punctuation\">,</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span></span>\n    <span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>button</span> <span class=\"token attr-name\">onClick</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>toggleTheme<span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">Dark Mode</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>button</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n    </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>footer</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span></code></pre></div>","frontmatter":{"title":"[React] React Hook - useContext","date":"January 11, 2022","update":"January 11, 2022","tags":["frontend","react"],"series":"React.js"},"fields":{"slug":"/hook-useContext/","readingTime":{"minutes":3.195}}},"seriesList":{"edges":[{"node":{"id":"7dd423fc-d44d-54e7-b5cd-873e058010b6","fields":{"slug":"/about-react/"},"frontmatter":{"title":"[React] 리액트의 개념과 특징"}}},{"node":{"id":"c9d9a63b-786f-5ae6-b92a-542dba2fc1b2","fields":{"slug":"/react-scratch/"},"frontmatter":{"title":"[React] 리액트 시작하기 (without CRA)"}}},{"node":{"id":"2a8f072f-2726-5585-9a16-c179ec41e4fe","fields":{"slug":"/about-react-hook/"},"frontmatter":{"title":"[React] React Hook이란?"}}},{"node":{"id":"d68a4c37-864f-5842-b1b5-f4f41d59966e","fields":{"slug":"/hook-useState/"},"frontmatter":{"title":"[React] React Hook - useState"}}},{"node":{"id":"c349e787-0d72-5b2d-97c0-633be199d9ca","fields":{"slug":"/hook-useEffect/"},"frontmatter":{"title":"[React] React Hook - useEffect"}}},{"node":{"id":"4dde3cd8-bf42-570f-806b-61ad0e744e94","fields":{"slug":"/hook-useRef/"},"frontmatter":{"title":"[React] React Hook - useRef"}}},{"node":{"id":"7e295942-2bdf-5bb6-84a3-0dfc57e84e76","fields":{"slug":"/hook-useContext/"},"frontmatter":{"title":"[React] React Hook - useContext"}}},{"node":{"id":"58218230-aad0-5b8f-96b1-b0a209ba6cc1","fields":{"slug":"/hook-useMemo/"},"frontmatter":{"title":"[React] React Hook - useMemo"}}},{"node":{"id":"2b9dbc56-76b3-5065-869b-cf73ed7d7d40","fields":{"slug":"/hook-useCallback/"},"frontmatter":{"title":"[React] React Hook - useCallback"}}},{"node":{"id":"2fe79082-2b27-5274-884f-63de7ce41786","fields":{"slug":"/hook-useReducer/"},"frontmatter":{"title":"[React] React Hook - useReducer"}}}]},"previous":{"fields":{"slug":"/hook-useRef/"},"frontmatter":{"title":"[React] React Hook - useRef"}},"next":{"fields":{"slug":"/hook-useMemo/"},"frontmatter":{"title":"[React] React Hook - useMemo"}}},"pageContext":{"id":"7e295942-2bdf-5bb6-84a3-0dfc57e84e76","series":"React.js","previousPostId":"4dde3cd8-bf42-570f-806b-61ad0e744e94","nextPostId":"58218230-aad0-5b8f-96b1-b0a209ba6cc1"}},"staticQueryHashes":[]}