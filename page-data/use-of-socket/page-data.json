{"componentChunkName":"component---src-templates-post-jsx","path":"/use-of-socket/","result":{"data":{"site":{"siteMetadata":{"title":"joy.blog"}},"markdownRemark":{"id":"649d075c-0f21-5edf-a637-34e7649bdd5b","excerpt":"✨ Socket.io 기본 Set-up Server Client 🔀 데이터 교환 방식 (emit & on) 데이터 전송 :  데이터 수신 :  예시 Client에서 데이터를 전송한다. Server는 Client로부터 데이터를 받은 후 다시 Client에 전달한다.  : Client가 가진 모든 소켓에 데이터 전송 Client에서 데이터를 출력한다. 📝 그…","html":"<h2>✨ Socket.io 기본 Set-up</h2>\n<ul>\n<li>Server</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> io <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"socket.io\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span><span class=\"token number\">3000</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token literal-property property\">cors</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token literal-property property\">origin</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"http://localhost:8080\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n\nio<span class=\"token punctuation\">.</span><span class=\"token function\">on</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"connection\"</span><span class=\"token punctuation\">,</span> <span class=\"token parameter\">socket</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>socket<span class=\"token punctuation\">.</span>id<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span></code></pre></div>\n<ul>\n<li>Client</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> io <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"socket.io-client\"</span>\n<span class=\"token keyword\">const</span> socket <span class=\"token operator\">=</span> <span class=\"token function\">io</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"http://localhost:3000\"</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// server url 전달</span>\n\nsocket<span class=\"token punctuation\">.</span><span class=\"token function\">on</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"connect\"</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">displayMessage</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">You connected with id : </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>socket<span class=\"token punctuation\">.</span>id<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span></code></pre></div>\n<br/>\n<h2>🔀 데이터 교환 방식 (emit &#x26; on)</h2>\n<ul>\n<li>데이터 전송 : <code class=\"language-text\">emit</code></li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\">socket<span class=\"token punctuation\">.</span><span class=\"token function\">emit</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"event-name\"</span><span class=\"token punctuation\">,</span> data<span class=\"token punctuation\">)</span></code></pre></div>\n<ul>\n<li>데이터 수신 : <code class=\"language-text\">on</code></li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\">socket<span class=\"token punctuation\">.</span><span class=\"token function\">on</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"event-name\"</span><span class=\"token punctuation\">,</span> <span class=\"token parameter\">data</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span></code></pre></div>\n<h3>예시</h3>\n<ol>\n<li>Client에서 데이터를 전송한다.</li>\n</ol>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> message <span class=\"token operator\">=</span> messageInput<span class=\"token punctuation\">.</span>value\nsocket<span class=\"token punctuation\">.</span><span class=\"token function\">emit</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"send-message\"</span><span class=\"token punctuation\">,</span> message<span class=\"token punctuation\">)</span></code></pre></div>\n<ol start=\"2\">\n<li>\n<p>Server는 Client로부터 데이터를 받은 후 다시 Client에 전달한다.</p>\n<ul>\n<li><code class=\"language-text\">io.emit</code> : Client가 가진 모든 소켓에 데이터 전송</li>\n</ul>\n</li>\n</ol>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\">io<span class=\"token punctuation\">.</span><span class=\"token function\">on</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"connection\"</span><span class=\"token punctuation\">,</span> <span class=\"token parameter\">socket</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  socket<span class=\"token punctuation\">.</span><span class=\"token function\">on</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"send-message\"</span><span class=\"token punctuation\">,</span> <span class=\"token parameter\">message</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    io<span class=\"token punctuation\">.</span><span class=\"token function\">emit</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"receive-message\"</span><span class=\"token punctuation\">,</span> message<span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span></code></pre></div>\n<ol start=\"3\">\n<li>Client에서 데이터를 출력한다.</li>\n</ol>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\">socket<span class=\"token punctuation\">.</span><span class=\"token function\">on</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"receive-message\"</span><span class=\"token punctuation\">,</span> <span class=\"token parameter\">message</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">displayMessage</span><span class=\"token punctuation\">(</span>message<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span></code></pre></div>\n<br/>\n<h2>📝 그외 Socket.io 기능들</h2>\n<h3>broadcast</h3>\n<p><code class=\"language-text\">socket.broadcast.emit</code> : 데이터를 전송한 socket을 제외한 모든 socket에 데이터 전달\n<br/> ex) A가 보낸 메세지는 A를 제외한 B,C에 전달됨</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\">io<span class=\"token punctuation\">.</span><span class=\"token function\">on</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"connection\"</span><span class=\"token punctuation\">,</span> <span class=\"token parameter\">socket</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  socket<span class=\"token punctuation\">.</span><span class=\"token function\">on</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"send-message\"</span><span class=\"token punctuation\">,</span> <span class=\"token parameter\">message</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    socket<span class=\"token punctuation\">.</span>broadcast<span class=\"token punctuation\">.</span><span class=\"token function\">emit</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"receive-message\"</span><span class=\"token punctuation\">,</span> message<span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span></code></pre></div>\n<h3>room</h3>\n<p><code class=\"language-text\">socket.to(room).emit</code> : 특정한 socket에만 데이터를 전송해야하는 경우 room을 생성하여 room에 속한 socket에만 데이터를 보낼 수 있는 기능입니다.</p>\n<ol>\n<li>Client에서 room을 생성한 후 Server에 전달합니다.</li>\n</ol>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\">joinRoomButton<span class=\"token punctuation\">.</span><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"click\"</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> room <span class=\"token operator\">=</span> roomInput<span class=\"token punctuation\">.</span>value\n  socket<span class=\"token punctuation\">.</span><span class=\"token function\">emit</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"join-room\"</span><span class=\"token punctuation\">,</span> room<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span></code></pre></div>\n<ol start=\"2\">\n<li>Client로부터 전달받은 room값을 Server에 저장합니다.</li>\n</ol>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\">io<span class=\"token punctuation\">.</span><span class=\"token function\">on</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"connection\"</span><span class=\"token punctuation\">,</span> <span class=\"token parameter\">socket</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  socket<span class=\"token punctuation\">.</span><span class=\"token function\">on</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"join-room\"</span><span class=\"token punctuation\">,</span> <span class=\"token parameter\">room</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    socket<span class=\"token punctuation\">.</span><span class=\"token function\">join</span><span class=\"token punctuation\">(</span>room<span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span></code></pre></div>\n<ol start=\"3\">\n<li>특정 room에 데이터를 보내는 경우, Client에서 데이터와 room 정보를 함께 전송합니다</li>\n</ol>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> message <span class=\"token operator\">=</span> messageInput<span class=\"token punctuation\">.</span>value\n<span class=\"token keyword\">const</span> room <span class=\"token operator\">=</span> roomInput<span class=\"token punctuation\">.</span>value\nsocket<span class=\"token punctuation\">.</span><span class=\"token function\">emit</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"send-message\"</span><span class=\"token punctuation\">,</span> message<span class=\"token punctuation\">,</span> room<span class=\"token punctuation\">)</span></code></pre></div>\n<ol start=\"4\">\n<li>Server에서 특정 room으로 데이터를 전송합니다. <code class=\"language-text\">socket.to(room)</code></li>\n</ol>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\">io<span class=\"token punctuation\">.</span><span class=\"token function\">on</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"connection\"</span><span class=\"token punctuation\">,</span> <span class=\"token parameter\">socket</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  socket<span class=\"token punctuation\">.</span><span class=\"token function\">on</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"send-message\"</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">message<span class=\"token punctuation\">,</span> room</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>room<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      socket<span class=\"token punctuation\">.</span><span class=\"token function\">to</span><span class=\"token punctuation\">(</span>room<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">emit</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"receive-message\"</span><span class=\"token punctuation\">,</span> message<span class=\"token punctuation\">)</span>\n      <span class=\"token comment\">// to(room)은 broadcast 특징을 함께 가짐</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span></code></pre></div>\n<p><br /><br /></p>\n<blockquote>\n<p>REFERENCE<br /> Learn Socket.io In 30 Minutes <a href=\"https://youtu.be/ZKEqqIO7n-k\">https://youtu.be/ZKEqqIO7n-k</a> <br/> Socket.io란 <a href=\"https://nesoy.github.io/articles/2017-04/Socket.io\">https://nesoy.github.io/articles/2017-04/Socket.io</a><br/>Dev Scroll <a href=\"https://inpa.tistory.com/entry/SOCKET-%F0%9F%93%9A-SocketIO-%EC%82%AC%EC%9A%A9-%ED%95%B4%EB%B3%B4%EA%B8%B0\">https://inpa.tistory.com/entry/SOCKET-📚-SocketIO-사용-해보기</a></p>\n</blockquote>","frontmatter":{"title":"Socket.io 기능 알아보기","date":"April 27, 2022","update":"April 27, 2022","tags":["socket.io"],"series":"Socket.io"},"fields":{"slug":"/use-of-socket/","readingTime":{"minutes":2.41}}},"seriesList":{"edges":[{"node":{"id":"4fecebf5-dc29-56e6-a7a1-45ec48733804","fields":{"slug":"/about-socket/"},"frontmatter":{"title":"Socket 통신 개념 및 Socket.io 사용 예시"}}},{"node":{"id":"649d075c-0f21-5edf-a637-34e7649bdd5b","fields":{"slug":"/use-of-socket/"},"frontmatter":{"title":"Socket.io 기능 알아보기"}}}]},"previous":{"fields":{"slug":"/about-socket/"},"frontmatter":{"title":"Socket 통신 개념 및 Socket.io 사용 예시"}},"next":null},"pageContext":{"id":"649d075c-0f21-5edf-a637-34e7649bdd5b","series":"Socket.io","previousPostId":"4fecebf5-dc29-56e6-a7a1-45ec48733804","nextPostId":null}},"staticQueryHashes":[]}