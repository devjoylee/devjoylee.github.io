{"componentChunkName":"component---src-templates-post-jsx","path":"/java01/","result":{"data":{"site":{"siteMetadata":{"title":"joy.blog"}},"markdownRemark":{"id":"2f6e0a4c-40b5-5c6c-92d5-e22ddbf95047","excerpt":"1. 변수와 데이터 타입 자바에서는 변수 사용 시 반드시 타입을 명시해야 한다. 한번 선언된 타입은 변경할 수 없다. 기본 자료형 (Primitive Types) 실제 값을 저장하는 자료형 참조 자료형 (Reference Types) 데이터의 '주소'를 저장하는 자료형. 클래스, 인터페이스, 배열과 같은 자료형이 있다. 사용할 때는  예약어를 통해 생성한…","html":"<h2>1. 변수와 데이터 타입</h2>\n<p>자바에서는 변수 사용 시 반드시 타입을 명시해야 한다. 한번 선언된 타입은 변경할 수 없다.</p>\n<h3>기본 자료형 (Primitive Types)</h3>\n<p>실제 값을 저장하는 자료형</p>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token comment\">// 정수형</span>\n<span class=\"token keyword\">byte</span> age <span class=\"token operator\">=</span> <span class=\"token number\">25</span><span class=\"token punctuation\">;</span>         <span class=\"token comment\">// 1바이트 (-128 ~ 127)</span>\n<span class=\"token keyword\">short</span> point <span class=\"token operator\">=</span> <span class=\"token number\">32000</span><span class=\"token punctuation\">;</span>   <span class=\"token comment\">// 2바이트 (-32,768 ~ 32,767)</span>\n<span class=\"token keyword\">int</span> count <span class=\"token operator\">=</span> <span class=\"token number\">1000000</span><span class=\"token punctuation\">;</span>   <span class=\"token comment\">// 4바이트 (약 ±21억)</span>\n<span class=\"token keyword\">long</span> money <span class=\"token operator\">=</span> <span class=\"token number\">1234567890L</span><span class=\"token punctuation\">;</span>  <span class=\"token comment\">// 8바이트 (L 접미사 필수)</span>\n\n<span class=\"token comment\">// 실수형</span>\n<span class=\"token keyword\">float</span> height <span class=\"token operator\">=</span> <span class=\"token number\">175.5f</span><span class=\"token punctuation\">;</span>  <span class=\"token comment\">// 4바이트 (f 접미사 필수)</span>\n<span class=\"token keyword\">double</span> weight <span class=\"token operator\">=</span> <span class=\"token number\">67.5</span><span class=\"token punctuation\">;</span>   <span class=\"token comment\">// 8바이트</span>\n\n<span class=\"token comment\">// 문자형</span>\n<span class=\"token keyword\">char</span> grade <span class=\"token operator\">=</span> <span class=\"token char\">'A'</span><span class=\"token punctuation\">;</span>       <span class=\"token comment\">// 2바이트 (단일 문자)</span>\n\n<span class=\"token comment\">// 논리형</span>\n<span class=\"token keyword\">boolean</span> isStudent <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>  <span class=\"token comment\">// true/false</span>\n</code></pre></div>\n<h3>참조 자료형 (Reference Types)</h3>\n<p>데이터의 '주소'를 저장하는 자료형. 클래스, 인터페이스, 배열과 같은 자료형이 있다. <br/>사용할 때는 <code class=\"language-text\">new</code> 예약어를 통해 생성한다. (= 생성자 constructor 호출)</p>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token comment\">// 문자열</span>\n<span class=\"token class-name\">String</span> name <span class=\"token operator\">=</span> <span class=\"token string\">\"김철수\"</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// 배열</span>\n<span class=\"token keyword\">int</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> numbers <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token keyword\">int</span><span class=\"token punctuation\">[</span><span class=\"token number\">5</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n<span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> fruits <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span><span class=\"token string\">\"사과\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"바나나\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"오렌지\"</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// 클래스 객체</span>\n<span class=\"token class-name\">Student</span> student <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Student</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"김철수\"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">20</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<h2>2. 접근 제어자</h2>\n<p>자바의 접근 제어자는 클래스, 메서드, 변수의 접근 범위를 제어한다.</p>\n<table>\n<thead>\n<tr>\n<th>접근제어자</th>\n<th>클래스 내</th>\n<th>패키지 내</th>\n<th>하위 클래스</th>\n<th>전역</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code class=\"language-text\">public</code></td>\n<td>O</td>\n<td>O</td>\n<td>O</td>\n<td>O</td>\n</tr>\n<tr>\n<td><code class=\"language-text\">protected</code></td>\n<td>O</td>\n<td>O</td>\n<td>O</td>\n<td>X</td>\n</tr>\n<tr>\n<td><code class=\"language-text\">default</code></td>\n<td>O</td>\n<td>O</td>\n<td>X</td>\n<td>X</td>\n</tr>\n<tr>\n<td><code class=\"language-text\">private</code></td>\n<td>O</td>\n<td>X</td>\n<td>X</td>\n<td>X</td>\n</tr>\n</tbody>\n</table>\n<h3>사용 예시</h3>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">Student</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// private: 같은 클래스 내에서만 접근 가능</span>\n    <span class=\"token keyword\">private</span> <span class=\"token class-name\">String</span> name<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">private</span> <span class=\"token keyword\">int</span> age<span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\">// public: 어디서든 접근 가능</span>\n    <span class=\"token keyword\">public</span> <span class=\"token class-name\">Student</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span> name<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> age<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>name <span class=\"token operator\">=</span> name<span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>age <span class=\"token operator\">=</span> age<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token comment\">// protected: 같은 패키지와 자식 클래스에서 접근 가능</span>\n    <span class=\"token keyword\">protected</span> <span class=\"token keyword\">void</span> <span class=\"token function\">study</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>name <span class=\"token operator\">+</span> <span class=\"token string\">\"이(가) 공부중입니다.\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token comment\">// default(접근제어자 생략): 같은 패키지 내에서만 접근 가능</span>\n    <span class=\"token keyword\">void</span> <span class=\"token function\">eat</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"식사 중...\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>\n<h3>꼭 알아야 할 특징!</h3>\n<ol>\n<li>클래스의 멤버 변수는 기본적으로 <code class=\"language-text\">private</code>으로 선언</li>\n<li>외부에서 접근이 필요한 경우 getter/setter 메서드를 <code class=\"language-text\">public</code>으로 제공</li>\n<li>상속이 필요한 메서드는 <code class=\"language-text\">protected</code> 사용</li>\n<li>특별한 이유가 없다면 <code class=\"language-text\">default</code> 접근제어자는 지양</li>\n</ol>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">BankAccount</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">private</span> <span class=\"token keyword\">int</span> balance<span class=\"token punctuation\">;</span>  <span class=\"token comment\">// 잔액은 private으로 보호</span>\n\n    <span class=\"token comment\">// getter</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">int</span> <span class=\"token function\">getBalance</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">return</span> balance<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token comment\">// setter</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">deposit</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> amount<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>amount <span class=\"token operator\">></span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>balance <span class=\"token operator\">+=</span> amount<span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>\n<h2>3. static 키워드</h2>\n<p>static은 클래스 레벨의 멤버를 선언할 때 사용한다.</p>\n<h3>주요 특징</h3>\n<ul>\n<li>static 멤버는 프로그램이 시작되어 해당 클래스가 메모리에 로드되는 시점에 생성된다.</li>\n<li>메모리에 단 하나만 존재하며 모든 객체(인스턴스)가 공유한다.</li>\n<li>객체 생성(<code class=\"language-text\">new</code>) 없이 클래스 이름만으로 직접 접근이 가능하다.</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">Calculator</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">static</span> <span class=\"token keyword\">double</span> <span class=\"token constant\">PI</span> <span class=\"token operator\">=</span> <span class=\"token number\">3.14159</span><span class=\"token punctuation\">;</span>  <span class=\"token comment\">// static 변수</span>\n\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">int</span> <span class=\"token function\">add</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> a<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> b<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>  <span class=\"token comment\">// static 메서드</span>\n        <span class=\"token keyword\">return</span> a <span class=\"token operator\">+</span> b<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h3>private static의 의미</h3>\n<p><code class=\"language-text\">private static</code>은 static의 특징에 접근 제어를 추가한 것이다.</p>\n<ul>\n<li>특징 : static의 모든 특징을 가지나 같은 클래스 내에서만 접근 가능하며 외부에서 직접 접근이 불가능하다</li>\n<li>예시 코드</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">UserManager</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// 클래스 내부에서만 접근 가능한 공유 변수</span>\n    <span class=\"token keyword\">private</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">int</span> userCount <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\">// 클래스 내부에서만 사용하는 유틸리티 메서드</span>\n    <span class=\"token keyword\">private</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">boolean</span> <span class=\"token function\">validateUser</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span> name<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">return</span> name <span class=\"token operator\">!=</span> <span class=\"token keyword\">null</span> <span class=\"token operator\">&amp;&amp;</span> <span class=\"token operator\">!</span>name<span class=\"token punctuation\">.</span><span class=\"token function\">trim</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">isEmpty</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">addUser</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span> name<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token function\">validateUser</span><span class=\"token punctuation\">(</span>name<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            userCount<span class=\"token operator\">++</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h3>static vs private static 비교</h3>\n<table>\n<thead>\n<tr>\n<th>구분</th>\n<th>static</th>\n<th>private static</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>접근 범위</td>\n<td>어디서나 접근 가능</td>\n<td>같은 클래스 내에서만 접근 가능</td>\n</tr>\n<tr>\n<td>공유 특성</td>\n<td>모든 객체가 공유</td>\n<td>모든 객체가 공유</td>\n</tr>\n<tr>\n<td>메모리 생성 시점</td>\n<td>클래스 로드 시</td>\n<td>클래스 로드 시</td>\n</tr>\n<tr>\n<td>주요 용도</td>\n<td>공용 API, 유틸리티, 상수</td>\n<td>내부 유틸리티, 클래스 내부 데이터</td>\n</tr>\n</tbody>\n</table>\n<h2>4. 실제 사용 예시</h2>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">UserManager</span> <span class=\"token punctuation\">{</span>\n\t\t<span class=\"token comment\">// static 멤버: 모든 UserManager 인스턴스가 공유하는 사용자 수 카운터</span>\n    <span class=\"token keyword\">private</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">int</span> totalUserCount <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\">// 인스턴스 멤버: 각 매니저가 관리하는 사용자 목록</span>\n    <span class=\"token keyword\">private</span> <span class=\"token class-name\">List</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">User</span><span class=\"token punctuation\">></span></span> users<span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">public</span> <span class=\"token class-name\">UserManager</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>users <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">ArrayList</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token punctuation\">></span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">addUser</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span> name<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> age<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token function\">isValidAge</span><span class=\"token punctuation\">(</span>age<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            users<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">User</span><span class=\"token punctuation\">(</span>name<span class=\"token punctuation\">,</span> age<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            totalUserCount<span class=\"token operator\">++</span><span class=\"token punctuation\">;</span>  <span class=\"token comment\">// static 변수 증가</span>\n            <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"사용자가 추가되었습니다.\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"유효하지 않은 나이입니다.\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n\n\t\t<span class=\"token comment\">// static 메서드: 나이 유효성 검사는 인스턴스와 무관한 공통 로직</span>\n    <span class=\"token keyword\">private</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">boolean</span> <span class=\"token function\">isValidAge</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> age<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">return</span> age <span class=\"token operator\">>=</span> <span class=\"token number\">0</span> <span class=\"token operator\">&amp;&amp;</span> age <span class=\"token operator\">&lt;=</span> <span class=\"token number\">120</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">printUsers</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">User</span> user <span class=\"token operator\">:</span> users<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>user<span class=\"token punctuation\">.</span><span class=\"token function\">getName</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token string\">\": \"</span> <span class=\"token operator\">+</span> user<span class=\"token punctuation\">.</span><span class=\"token function\">getAge</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token string\">\"세\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token comment\">// static 메서드: 전체 사용자 수 조회</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">int</span> <span class=\"token function\">getTotalUserCount</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">return</span> totalUserCount<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>","frontmatter":{"title":"[Java] 기초 개념 : 변수/자료형/접근제어자","date":"January 22, 2025","update":"January 22, 2025","tags":["java"],"series":"Java"},"fields":{"slug":"/java01/","readingTime":{"minutes":6.12}}},"seriesList":{"edges":[{"node":{"id":"2f6e0a4c-40b5-5c6c-92d5-e22ddbf95047","fields":{"slug":"/java01/"},"frontmatter":{"title":"[Java] 기초 개념 : 변수/자료형/접근제어자"}}}]},"previous":{"fields":{"slug":"/agile/"},"frontmatter":{"title":"애자일(Agile) 개발 방법론"}},"next":null},"pageContext":{"id":"2f6e0a4c-40b5-5c6c-92d5-e22ddbf95047","series":"Java","previousPostId":"5e4dd0bb-973a-5269-aa8a-762a5b034cb1","nextPostId":null}},"staticQueryHashes":[],"slicesMap":{}}